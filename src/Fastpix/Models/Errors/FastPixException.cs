//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by FastPix (https://FastPix.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable
namespace Fastpix.Models.Errors
{
    using System;
    using System.Net.Http;
    using System.Net.Http.Headers;

    public class FastPixException : Exception
    {
        /// <summary>
        /// Error Message
        /// </summary>
        public override string Message { get; }

        /// <summary>
        /// HTTP Request
        /// </summary>
        public HttpRequestMessage Request { get; }

        /// <summary>
        /// HTTP Response
        /// </summary>
        public HttpResponseMessage Response { get; }

        /// <summary>
        /// HTTP response body
        /// </summary>
        public string Body { get; }

        public FastPixException(
            string message,
            HttpRequestMessage request,
            HttpResponseMessage response,
            string body
        ) : this(message, request, response, body, null) {}

        public FastPixException(
            string message,
            HttpRequestMessage request,
            HttpResponseMessage response,
            string body,
            Exception? innerException
        ) : base(message, innerException)
        {
            Message = $"{message.TrimEnd('.')}. Body: {body}.";
            Request = request;
            Response = response;
            Body = body;
        }

        /// <summary>
        /// Detailed Error Message
        /// </summary>
        public override string ToString()
        {
            var innerMessage = string.IsNullOrEmpty(InnerException?.Message) ? "" : $"\n{InnerException.Message}";
            return $"Status: {Response.StatusCode}. {Message}{innerMessage}";
        }

    }
}
