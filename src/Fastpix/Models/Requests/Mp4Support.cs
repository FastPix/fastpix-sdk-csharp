//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Fastpix.Models.Requests
{
    using Fastpix.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// Generates MP4 video up to 4K (&quot;capped_4k&quot;), m4a audio only (&quot;audioOnly&quot;), or both for offline viewing.<br/>
    /// 
    /// <remarks>
    /// 
    /// </remarks>
    /// </summary>
    public enum Mp4Support
    {
        [JsonProperty("capped_4k")]
        Capped4k,
        [JsonProperty("audioOnly")]
        AudioOnly,
        [JsonProperty("audioOnly,capped_4k")]
        AudioOnlyCapped4k,
    }

    public static class Mp4SupportExtension
    {
        public static string Value(this Mp4Support value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static Mp4Support ToEnum(this string value)
        {
            foreach(var field in typeof(Mp4Support).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is Mp4Support)
                    {
                        return (Mp4Support)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum Mp4Support");
        }
    }

}