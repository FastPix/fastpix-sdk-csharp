//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Fastpix.Models.Components
{
    using Fastpix.Models.Components;
    using Fastpix.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    
    public class Media
    {

        /// <summary>
        /// A video thumbnail is a still image that acts as the preview image for your video.
        /// </summary>
        [JsonProperty("thumbnail")]
        public string? Thumbnail { get; set; }

        /// <summary>
        /// When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; }

        /// <summary>
        /// A unique identifier is generated by FastPix for the workspace.
        /// </summary>
        [JsonProperty("workspaceId")]
        public string? WorkspaceId { get; set; }

        /// <summary>
        /// You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
        /// </summary>
        [JsonProperty("metadata")]
        public MediaMetadata? Metadata { get; set; }

        /// <summary>
        /// The maximum resolution specified by the user for the media.
        /// </summary>
        [JsonProperty("maxResolution")]
        public MediaMaxResolution? MaxResolution { get; set; } = Fastpix.Models.Components.MediaMaxResolution.OneThousandAndEightyp;

        /// <summary>
        /// The actual resolution of the uploaded media. This represents the native quality of the source media.
        /// </summary>
        [JsonProperty("sourceResolution")]
        public SourceResolution? SourceResolution { get; set; } = Fastpix.Models.Components.SourceResolution.OneThousandAndEightyp;

        /// <summary>
        /// Determines the media&apos;s status, which can be one of the possible values.
        /// </summary>
        [JsonProperty("status")]
        public string? Status { get; set; }

        /// <summary>
        /// Determines the type of MP4 support for the media.   - **none**: Disables MP4 support.   - **capped_4k**: Enables MP4 downloads with resolutions up to 4K.   - **audioOnly**: Provides an MP4 stream containing only the audio.   - **audioOnly,capped_4k**: Enables both MP4 video downloads (up to 4K) and an audio-only stream.
        /// </summary>
        [JsonProperty("mp4Support")]
        public MediaMp4Support? Mp4Support { get; set; }

        /// <summary>
        /// The sourceAccess parameter determines whether the original media file is accessible. Set to true to enable access or false to restrict it
        /// </summary>
        [JsonProperty("sourceAccess")]
        public bool? SourceAccess { get; set; }

        /// <summary>
        /// A collection of Playback ID objects utilized for crafting HLS playback URLs.
        /// </summary>
        [JsonProperty("playbackIds")]
        public List<PlaybackId>? PlaybackIds { get; set; }

        /// <summary>
        /// A media consists of different media tracks, like video, audio, and subtitle, all combined.
        /// </summary>
        [JsonProperty("tracks")]
        public List<Track>? Tracks { get; set; }

        /// <summary>
        /// The time span of the media, measured in seconds with a maximum allowable duration of 12 hours per individual media.
        /// </summary>
        [JsonProperty("duration")]
        public string? Duration { get; set; }

        /// <summary>
        /// Frame rate quantifies the speed at which frames are displayed per second. It represents the range of frames available for a specific track. If the frame rate of the input file is indeterminable, it will be indicated by a value of -1.
        /// </summary>
        [JsonProperty("frameRate")]
        public string? FrameRate { get; set; }

        /// <summary>
        /// The aspect ratio of a video is a value that describes the relative shape of a video based on its width and height.
        /// </summary>
        [JsonProperty("aspectRatio")]
        public string? AspectRatio { get; set; }

        /// <summary>
        /// Time the media was created, defined as a localDateTime (UTC Time).
        /// </summary>
        [JsonProperty("createdAt")]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Time the media was updated, defined as a localDateTime (UTC Time).
        /// </summary>
        [JsonProperty("updatedAt")]
        public DateTime? UpdatedAt { get; set; }
    }
}