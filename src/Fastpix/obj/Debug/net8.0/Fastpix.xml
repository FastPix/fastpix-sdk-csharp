<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fastpix</name>
    </assembly>
    <members>
        <member name="M:Fastpix.IDimensions.ListAsync(Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List the dimensions
            
            <remarks>
            Retrieves a list of dimensions that can be used as query parameters across various data endpoints. Each dimension has a unique id that can be used to filter data effectively. <br/>
            <br/>
            The dimensions retrieved from this endpoint can be used in conjunction with the &lt;a href=&quot;https://docs.fastpix.io/reference/list_video_views&quot;&gt;list video views&lt;/a&gt; and &lt;a href=&quot;https://docs.fastpix.io/reference/list_by_top_content&quot;&gt;list by top content&lt;/a&gt; endpoints to filter results based on specific criteria. For example, you can filter views by `browser_name`, `os_name`, `device_type`, and more.<br/>
            <br/>
            Related guides: &lt;a href=&quot;https://docs.fastpix.io/page/what-video-data-do-we-capture#/&quot;&gt;What Video Data do we capture?&lt;/a&gt; ,   &lt;a href=&quot;https://docs.fastpix.io/docs/user-passable-metadata-1&quot;&gt;Use passable dimensions&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IDimensions.ListFilterValuesAsync(Fastpix.Models.Requests.DimensionsId,Fastpix.Models.Requests.ListFilterValuesForDimensionTimespan,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List the filter values for a dimension
            
            <remarks>
            This endpoint returns the filter values associated with a specific dimension, along with the total number of video views for each value. For example, it can list all `browser_name` (dimension) and show how many views occurred for all available browsers like Chrome, Safari (filter values). <br/>
            <br/>
            <br/>
            In order to use the &lt;a href=&quot;https://docs.fastpix.io/docs/custom-business-metadata&quot;&gt;Custom Dimensions&lt;/a&gt;, you must enable them in the dashboard under settings option based on the plan you have opted for.<br/>
            <br/>
            #### Example<br/>
            <br/>
            A developer wants to know how their video content performs across different browsers. By calling this endpoint for the `device_type` dimension, they can retrieve a breakdown of video views by each device (e.g., Desktop, Mobile, Tablet). This data will help the developer understand where optimizations or troubleshooting may be necessary.<br/>
            <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/understand-dashboard-ui#filters-and-timeframes&quot;&gt;Filters and timeframes&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IDrmConfigurations.ListAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get list of DRM configuration IDs
            
            <remarks>
            <br/>
            This endpoint retrieves the DRM configuration (DRM ID) associated with a workspace. It returns a list of DRM configurations, identified by a unique DRM ID, which is used for creating DRM encrypted asset.<br/>
            <br/>
            **How it works:**<br/>
            1. Make a GET request to this endpoint.  <br/>
            2. Optionally use the `offset` and `limit` query parameters to paginate through the list of DRM configurations.  <br/>
            3. The response includes a list of DRM IDs and pagination metadata.<br/>
            <br/>
            **Example:**  <br/>
            A media service provider may retrieve DRM configuration for a workspace to create DRM content.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/secure-playback-with-drm&quot;&gt;Manage DRM configuration&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IDrmConfigurations.GetByIdAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get DRM configuration by ID
            
            <remarks>
            <br/>
            This endpoint retrieves a DRM configuration ID. It is used to fetch the DRM-related ID for a workspace, typically required when validating or applying DRM policies to video assets.<br/>
            <br/>
            **How it works:**<br/>
            1. Make a GET request to this endpoint, replacing `{drmConfigurationId}` with the UUID of the DRM configuration.  <br/>
            2. The response will contain the associated DRM configuration ID.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/secure-playback-with-drm&quot;&gt;Manage DRM configuration&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IErrors.ListAsync(Fastpix.Models.Requests.ListErrorsTimespan,System.String,System.Nullable{System.Int64},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List errors
            
            <remarks>
            This endpoint returns the total number of playback errors that occurred, along with the total number of views captured, based on the specified timespan and filters. It provides insights into the overall playback quality and helps identify potential issues that may impact viewer experience. <br/>
            <br/>
            <br/>
            #### Key fields in response<br/>
            <br/>
            * **percentage:** The percentage of views affected by the specific error. <br/>
            * **uniqueViewersEffectedPercentage:** The percentage of unique viewers affected by the specific error (available only in the topErrors section). <br/>
            * **notes:** Additional notes or information about the specific error. <br/>
            * **message:** The error message or description. <br/>
            * **lastSeen:** The timestamp of when the error was last observed. <br/>
            * **id:** The unique identifier for the specific error. <br/>
            * **description:** A description of the specific error. <br/>
            * **count:** The number of occurrences of the specific error. <br/>
            * **code:** The error code associated with the specific error. <br/>
            <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/track-playback-errors&quot;&gt;Troubleshoot errors&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.IFastPix">
            <summary>
            FASTPIX API&apos;S: FastPix provides a comprehensive set of APIs that enable developers to manage both **on-demand media (video/audio)** and **live streaming experiences**, with built-in security features through **cryptographic signing keys**. These APIs cover the full lifecycle of content creation, management, distribution, playback, and secure access, making them ideal for building scalable video-first applications.<br/>
            
            <remarks>
            ### Media APIs (Video &amp; Audio on Demand)<br/>
            The **Media APIs** allow developers to create, retrieve, update, and delete media files, as well as manage metadata, playback settings, and additional tracks such as audio or subtitles. With these endpoints, developers can:<br/>
            - Upload videos directly or create media from URLs.   - Manage playback permissions and configure playback IDs.   - Add multilingual audio or subtitle tracks for global audiences.   - Build robust video-on-demand (VOD) and audio-on-demand (AOD) libraries.  <br/>
            **Use case scenarios**   - **Video-on-Demand Platforms:** Manage large content libraries for streaming services.   - **E-Learning Solutions:** Upload and organize lecture videos, metadata, and playback settings.   - **Multilingual Content Delivery:** Add multiple language tracks or subtitles to serve global users.  <br/>
            ### Live Stream APIs<br/>
            The **Live Stream APIs** simplify the process of creating, managing, and distributing live content. Developers can initiate broadcasts, configure stream settings, and extend streams to external platforms through simulcasting. These endpoints also support real-time interaction and customization of live events.<br/>
            - Start and manage live broadcasts programmatically.   - Control stream metadata, privacy, and playback options.   - Simulcast to platforms like YouTube, Facebook, or Twitch.   - Update stream details and manage live playback IDs in real time.  <br/>
            **Use case scenarios**   - **Event Broadcasting:** Enable organizers to set up live streams for conferences, concerts, or webinars.   - **Creator Platforms:** Provide streamers with tools for broadcasting gameplay, tutorials, or vlogs with simulcasting support.   - **Corporate Streaming:** Deliver secure internal town halls or meetings with privacy and playback controls.  <br/>
            ### Video Data APIs<br/>
            The **Video Data APIs** Provide insights into viewer interactions, performance metrics, and playback errors to optimize content delivery and user experience.<br/>
            <br/>
             - Track video views, unique viewers, and engagement metrics<br/>
             - Identify top-performing content and usage patterns<br/>
             - Break down data by browser, device, or geography<br/>
             - Detect playback errors and performance issues<br/>
             - Enable data-driven content strategy decisions<br/>
             <br/>
             **Use case scenarios** <br/>
             - Analytics Dashboards: Monitor performance across content libraries<br/>
             - Quality Monitoring: Diagnose and resolve playback issues<br/>
             - Content Strategy Optimization: Identify high-value content<br/>
             - User Behavior Insights: Understand audience interactions<br/>
            <br/>
            ### Signing Keys<br/>
            FastPix also provides endpoints for managing **cryptographic signing keys**, which are essential for securely signing and verifying tokens, such as JSON Web Tokens (JWTs). These keys are critical for authenticating and authorizing API requests, as well as for protecting access to media assets.<br/>
            - **Private key:** Used to create digital signatures (kept secret).   - **Public key:** Used to verify digital signatures (shared for verification).  <br/>
            By rotating and managing signing keys regularly, developers can maintain strong security practices and prevent unauthorized access.  <br/>
            **Use case scenarios**   - **Token-based authentication:** Validate user access to premium or subscription-based content.   - **Key rotation:** Regularly rotate keys to reduce risk of compromise.   - **Protect intellectual property:** Prevent unauthorized distribution of valuable media assets.   - **Control usage:** Restrict access to specific users, groups, or contexts.   - **Prevent tampering:** Ensure requested assets have not been modified.   - **Time-bound access:** Enable signed URLs with expiration for controlled viewing windows.  
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.FastPix">
            <summary>
            FASTPIX API&apos;S: FastPix provides a comprehensive set of APIs that enable developers to manage both **on-demand media (video/audio)** and **live streaming experiences**, with built-in security features through **cryptographic signing keys**. These APIs cover the full lifecycle of content creation, management, distribution, playback, and secure access, making them ideal for building scalable video-first applications.<br/>
            
            <remarks>
            ### Media APIs (Video &amp; Audio on Demand)<br/>
            The **Media APIs** allow developers to create, retrieve, update, and delete media files, as well as manage metadata, playback settings, and additional tracks such as audio or subtitles. With these endpoints, developers can:<br/>
            - Upload videos directly or create media from URLs.   - Manage playback permissions and configure playback IDs.   - Add multilingual audio or subtitle tracks for global audiences.   - Build robust video-on-demand (VOD) and audio-on-demand (AOD) libraries.  <br/>
            **Use case scenarios**   - **Video-on-Demand Platforms:** Manage large content libraries for streaming services.   - **E-Learning Solutions:** Upload and organize lecture videos, metadata, and playback settings.   - **Multilingual Content Delivery:** Add multiple language tracks or subtitles to serve global users.  <br/>
            ### Live Stream APIs<br/>
            The **Live Stream APIs** simplify the process of creating, managing, and distributing live content. Developers can initiate broadcasts, configure stream settings, and extend streams to external platforms through simulcasting. These endpoints also support real-time interaction and customization of live events.<br/>
            - Start and manage live broadcasts programmatically.   - Control stream metadata, privacy, and playback options.   - Simulcast to platforms like YouTube, Facebook, or Twitch.   - Update stream details and manage live playback IDs in real time.  <br/>
            **Use case scenarios**   - **Event Broadcasting:** Enable organizers to set up live streams for conferences, concerts, or webinars.   - **Creator Platforms:** Provide streamers with tools for broadcasting gameplay, tutorials, or vlogs with simulcasting support.   - **Corporate Streaming:** Deliver secure internal town halls or meetings with privacy and playback controls.  <br/>
            ### Video Data APIs<br/>
            The **Video Data APIs** Provide insights into viewer interactions, performance metrics, and playback errors to optimize content delivery and user experience.<br/>
            <br/>
             - Track video views, unique viewers, and engagement metrics<br/>
             - Identify top-performing content and usage patterns<br/>
             - Break down data by browser, device, or geography<br/>
             - Detect playback errors and performance issues<br/>
             - Enable data-driven content strategy decisions<br/>
             <br/>
             **Use case scenarios** <br/>
             - Analytics Dashboards: Monitor performance across content libraries<br/>
             - Quality Monitoring: Diagnose and resolve playback issues<br/>
             - Content Strategy Optimization: Identify high-value content<br/>
             - User Behavior Insights: Understand audience interactions<br/>
            <br/>
            ### Signing Keys<br/>
            FastPix also provides endpoints for managing **cryptographic signing keys**, which are essential for securely signing and verifying tokens, such as JSON Web Tokens (JWTs). These keys are critical for authenticating and authorizing API requests, as well as for protecting access to media assets.<br/>
            - **Private key:** Used to create digital signatures (kept secret).   - **Public key:** Used to verify digital signatures (shared for verification).  <br/>
            By rotating and managing signing keys regularly, developers can maintain strong security practices and prevent unauthorized access.  <br/>
            **Use case scenarios**   - **Token-based authentication:** Validate user access to premium or subscription-based content.   - **Key rotation:** Regularly rotate keys to reduce risk of compromise.   - **Protect intellectual property:** Prevent unauthorized distribution of valuable media assets.   - **Control usage:** Restrict access to specific users, groups, or contexts.   - **Prevent tampering:** Ensure requested assets have not been modified.   - **Time-bound access:** Enable signed URLs with expiration for controlled viewing windows.  
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Hooks.ISDKInitHook">
            <summary>
            SDKInit hook is called when the SDK is initializing.
            The hook can modify and return a new baseUrl and HTTP client to be used by the SDK.
            </summary>
        </member>
        <member name="T:Fastpix.Hooks.IBeforeRequestHook">
            <summary>
            BeforeRequestAsync hook is called before the SDK sends a request.
            The hook can modify the request before it is sent or throw an exception to stop the request from being sent.
            </summary>
        </member>
        <member name="T:Fastpix.Hooks.IAfterSuccessHook">
            <summary>
            AfterSuccessAsync is called after the SDK receives a response.
            The hook can modify the response before it is handled or throw an exception to stop the response from being handled.
            </summary>
        </member>
        <member name="T:Fastpix.Hooks.IAfterErrorHook">
            <summary>
            AfterErrorAsync is called after the SDK encounters an error, or a non-successful response.
            The hook can modify the response, if available, otherwise modify the error.
            All hooks are called sequentially. If an error is returned, it will be passed to the subsequent hook implementing IAfterErrorHook.
            If you want to prevent other AfterError hooks from being run, you can throw an FailEarlyException instead.
            </summary>
        </member>
        <member name="M:Fastpix.IInVideoAiFeatures.GenerateNamedEntitiesAsync(System.String,Fastpix.Models.Requests.UpdateMediaNamedEntitiesRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Generate named entities
            
            <remarks>
            This endpoint allows you to extract named entities from an existing media.<br/>
            Named Entity Recognition (NER) is a fundamental natural language processing (NLP) technique that identifies and classifies key information (entities) in text into predefined categories. For instance:<br/>
            <br/>
              - Organizations (e.g., &quot;Microsoft&quot;, &quot;United Nations&quot;)<br/>
              - Locations (e.g., &quot;Paris&quot;, &quot;Mount Everest&quot;)<br/>
              - Product names (e.g., &quot;iPhone&quot;, &quot;Coca-Cola&quot;)<br/>
            <br/>
            #### How it works<br/>
            1. Make a PATCH request to this endpoint, replacing `&lt;mediaId&gt;` with the ID of the media you want to extract named-entities.<br/>
            2. Include the `namedEntities` parameter in the request body to enable.<br/>
            3. Receive a response containing the updated media data, confirming the changes made.<br/>
            <br/>
            You can use the &lt;a href=&quot;https://docs.fastpix.io/docs/ai-events#videomediaainamedentitiesready&quot;&gt;video.mediaAI.named-entities.ready&lt;/a&gt; webhook event to track and notify about the named entities extraction.<br/>
            <br/>
            **Use case:** If a user uploads a video and later decides to enable named entity extraction without re-uploading the entire video.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/generate-named-entities&quot;&gt;Named entities&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IInVideoAiFeatures.EnableModerationAsync(System.String,Fastpix.Models.Requests.UpdateMediaModerationRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Enable video moderation
            
            <remarks>
            This endpoint enables moderation features, such as NSFW and profanity filtering, to detect inappropriate content in existing media.<br/>
            <br/>
            #### How it works<br/>
            1. Make a PATCH request to this endpoint, replacing `&lt;mediaId&gt;` with the ID of the media you want to update.<br/>
            2. Include the `moderation` object and provide the requried `type` parameter in the request body to specify the media type (e.g., video/audio/av).<br/>
            4. The response will contain the updated media data, confirming the changes made.<br/>
            <br/>
            You can use the &lt;a href=&quot;https://docs.fastpix.io/docs/ai-events#videomediaaimoderationready&quot;&gt;video.mediaAI.moderation.ready&lt;/a&gt; webhook event to track and notify about the detected moderation results.<br/>
            <br/>
            **Use case:** This is particularly useful when a user uploads a video and later decides to enable moderation detection without the need to re-upload it.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/using-nsfw-and-profanity-filter-for-video-moderation&quot;&gt;Moderate NSFW &amp; Profanity&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ILivePlayback.CreateAsync(System.String,Fastpix.Models.Components.PlaybackIdRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a playbackId
            
            <remarks>
            Generates a new playback ID for the live stream, allowing viewers to access the stream through this ID. The playback ID can be shared with viewers for direct access to the live broadcast. <br/>
            <br/>
              By calling this endpoint with the `streamId`, FastPix returns a unique `playbackId`, which can be used to stream the live content. <br/>
            <br/>
              #### Example<br/>
            <br/>
              A media platform needs to distribute a unique playback ID to users for an exclusive live concert. The platform can also embed the stream on various partner websites.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ILivePlayback.DeleteAsync(System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete a playbackId
            
            <remarks>
            Deletes a previously created playback ID for a live stream. This will prevent any new viewers from accessing the stream through the playback ID, though current viewers will be able to continue watching for a limited time before being disconnected. By providing the `playbackId`, FastPix deletes the ID and ensures new playback requests will fail. <br/>
            <br/>
            #### Example<br/>
            A streaming service wants to prevent new users from joining a live stream that is nearing its end. The host can delete the playback ID to ensure no one can join the stream or replay it once it ends.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ILivePlaybacks.GetAsync(System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get playbackId details
            
            <remarks>
            Retrieves details about a previously created playback ID. If you provide the distinct `playbackId` that was given back to you in the previous stream or &lt;a href=&quot;https://docs.fastpix.io/reference/create-playbackid-of-stream&quot;&gt;create playbackId&lt;/a&gt; request, FastPix will provide the relevant playback details such as the access policy. <br/>
            <br/>
            #### Example<br/>
            A developer needs to confirm the access policy of the playback ID to ensure whether the stream is public or private for viewers.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ILiveStreams.CreateAsync(Fastpix.Models.Components.CreateLiveStreamRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a new stream
            
            <remarks>
            Allows you to initiate a new &lt;a href=&quot;https://docs.fastpix.io/docs/get-started-with-live-streaming&quot;&gt;RTMPS&lt;/a&gt; or &lt;a href=&quot;https://docs.fastpix.io/docs/using-srt-to-live-stream&quot;&gt;SRT&lt;/a&gt; live stream on FastPix. Upon creating a stream, FastPix generates a unique `streamKey` and `srtSecret`, which can be used with any broadcasting software (like OBS) to connect to FastPix&apos;s RTMPS or SRT servers.<br/>
            Leverage SRT for live streaming in environments with unstable networks, taking advantage of its error correction and encryption features for a resilient and secure broadcast. <br/>
            <br/>
            &lt;h4&gt;How it works&lt;/h4&gt; <br/>
            <br/>
            1. Send a a `POST` request to this endpoint. You can configure the stream settings, including `metadata` (such as stream name and description), `reconnectWindow` (in case of disconnection), and privacy options (`public` or `private`). <br/>
            <br/>
            2. FastPix returns the stream details for both RTMPS and SRT configurations. These keys and IDs from the stream details are essential for connecting the broadcasting software to FastPix’s servers and transmitting the live stream to viewers.<br/>
            <br/>
            3. Once the live stream is created, we’ll shoot a `POST` message to the address you give us with the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/live-events#videolive_streamcreated&quot;&gt;video.live_stream.created&lt;/a&gt;.<br/>
            <br/>
            <br/>
            **Example:**<br/>
            <br/>
            <br/>
              Imagine a gaming platform that allows users to live stream gameplay directly from their dashboard. The API creates a new stream, provides the necessary stream key, and sets it to &quot;private&quot; so that only specific viewers can access it. <br/>
            <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/how-to-livestream&quot;&gt;How to live stream&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ILiveStreams.ListAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Fastpix.Models.Requests.OrderBy},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get all live streams
            
            <remarks>
            Retrieves a list of all live streams associated with the current workspace. It provides an overview of both current and past live streams, including details like `streamId`, `metadata`, `status`, `createdAt` and more.<br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            Use the access token and secret key related to the workspace in the request header. When called, the API provides a paginated response containing all the live streams in that specific workspace. This is helpful for retrieving a large volume of streams and managing content in bulk.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageLiveStream.GetViewerCountAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get stream views by ID
            
            <remarks>
            This endpoint retrieves the current number of viewers watching a specific live stream, identified by its unique `streamId`.<br/>
            <br/>
            The viewer count is an **approximate value**, optimized for performance. It provides a near-real-time estimate of how many clients are actively watching the stream. This approach ensures high efficiency, especially when the stream is being watched at large scale across multiple devices or platforms.<br/>
            <br/>
            #### Example<br/>
            <br/>
            Suppose a content creator is hosting a live concert and wants to display the number of live viewers on their dashboard. This endpoint can be queried to show up-to-date viewer statistics.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/manage-streams&quot;&gt;Manage streams&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageLiveStream.DisableAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Disable a stream
            
            <remarks>
            This endpoint disables a livestream by setting its status to `disabled`. Use this to stop a livestream when it&apos;s no longer needed or should be taken offline intentionally.<br/>
            <br/>
            A disabled stream can later be re-enabled using the enable endpoint — however, if you&apos;re on a trial plan, re-enabling is not allowed once the stream is disabled.<br/>
            <br/>
            #### Example<br/>
            <br/>
            A speaker finishes their live session and wants to prevent the stream from being mistakenly started again. By calling this endpoint, the stream is transitioned to a `disabled` state, ensuring it&apos;s permanently stopped (unless re-enabled on a paid plan).<br/>
            <br/>
            Related guide &lt;a href=&quot;https://docs.fastpix.io/docs/manage-streams&quot;&gt;Manage streams&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageLiveStream.CompleteAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Complete a stream
            
            <remarks>
            This endpoint marks a livestream as completed by stopping the active stream and transitioning its status to `idle`. It is typically used after a livestream session has ended.<br/>
            <br/>
            This operation only works when the stream is in the `active` state.<br/>
            <br/>
            Completing a stream can help finalize the session and trigger post-processing events like VOD generation.<br/>
            <br/>
            #### Example<br/>
            <br/>
            A virtual event ends, and the system or host needs to close the livestream to prevent further streaming. This endpoint ensures the livestream status is changed from `active` to `idle`, indicating it&apos;s officially completed.<br/>
            <br/>
            Related guide &lt;a href=&quot;https://docs.fastpix.io/docs/manage-streams&quot;&gt;Manage streams&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.ListLiveClipsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Fastpix.Models.Components.SortOrder},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get all clips of a live stream
            
            <remarks>
            Retrieves a list of all media clips generated from a specific livestream. Each media entry includes metadata such as the clip media IDs, and other relevant details. A media clip is a segmented portion of an original media file (source live stream). Clips are often created for various purposes such as previews, highlights, or customized edits.<br/>
            #### How it works<br/>
            To use this endpoint, provide the `livestreamId` as a parameter. The API then returns a paginated list of clipped media items created from that livestream. Pagination ensures optimal performance and usability when dealing with a large number of media files, making it easier to organize and manage content in bulk.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/instant-live-clipping&quot;&gt;Instant live clipping&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.DeleteAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete a media by ID
            
            <remarks>
            This endpoint allows you to permanently delete a a specific video or audio media file along with all associated data. If you wish to remove a media from FastPix storage, use this endpoint with the `mediaId` (either `uploadId` or `id`) received during the media&apos;s creation or upload. <br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            <br/>
            1. Make a DELETE request to this endpoint, replacing `&lt;mediaId&gt;` with the `uploadId` or the `id` of the media you want to delete. <br/>
            <br/>
            2. Since this action is irreversible, ensure that you no longer need the media before proceeding. Once deleted, the media cannot be retrieved or played back. <br/>
            <br/>
            3. Webhook event to look for: &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediadeleted&quot;&gt;video.media.deleted&lt;/a&gt;<br/>
            <br/>
            #### Example<br/>
            A user on a video-sharing platform decides to remove an old video from their profile, or suppose you&apos;re running a content moderation system, and one of the videos uploaded by a user violates your platform&apos;s policies. Using this endpoint, the media is permanently deleted from your library, ensuring it&apos;s no longer accessible or viewable by other users.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.CancelUploadAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Cancel ongoing upload
            
            <remarks>
            This endpoint allows you to cancel ongoing upload by its `uploadId`. Once cancelled, the upload will be marked as cancelled. Use this if a user aborts an upload or if you want to programmatically stop an in-progress upload.<br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Make a PUT request to this endpoint, replacing `{uploadId}` with the unique upload ID received after starting the upload.<br/>
            2. The response will confirm the cancellation and provide the status of the upload.<br/>
            <br/>
            #### Webhook Events<br/>
            <br/>
            Once the upload is cancelled, you will receive the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediauploadcancelled-event&quot;&gt;video.media.upload.cancelled&lt;/a&gt;.<br/>
            <br/>
            #### Example<br/>
            <br/>
            Suppose a user starts uploading a large video file but decides to cancel before completion. By calling this API, you can immediately stop the upload and free up resources.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.UpdateTrackAsync(System.String,System.String,Fastpix.Models.Components.UpdateTrackRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update audio / subtitle track
            
            <remarks>
            This endpoint allows you to update an existing audio or subtitle track associated with a media file. When updating a track, you must provide the new track `url`, `languageName`, and `languageCode`, ensuring all three parameters are included in the request.<br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Send a PATCH request to this endpoint, replacing `{mediaId}` with the media ID, and `{trackId}` with the ID of the track you want to update.<br/>
            <br/>
            2. Provide the necessary details in the request body.<br/>
            <br/>
            3. Receive a response confirming the track update.<br/>
            <br/>
            #### Webhook Events<br/>
            <br/>
            After updating a track, your system will receive webhook notifications:<br/>
            <br/>
            1. After successfully updating a track, your system will receive the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediatrackupdated&quot;&gt;video.media.track.updated&lt;/a&gt;.<br/>
            <br/>
            2. Once the new track is processed and ready, you will receive the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediatrackready&quot;&gt;video.media.track.ready&lt;/a&gt;.<br/>
            <br/>
            3. Once the media file is updated with the new track details, a &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediaupdated&quot;&gt;video.media.updated&lt;/a&gt; event will be triggered.<br/>
            <br/>
            <br/>
            #### Example<br/>
            Suppose you previously added a French subtitle track to a video but now need to update it with a different file. By calling this API, you can replace the existing subtitle file (.vtt) with a new one while keeping the same track ID. This is useful when:<br/>
            <br/>
              - The original track file has errors and needs correction.<br/>
              - You want to improve subtitle translations or replace an audio track with a better-quality version.<br/>
              <br/>
            Related guides: &lt;a href=&quot;https://docs.fastpix.io/docs/manage-subtitle-tracks&quot;&gt;Add own subtitle tracks&lt;/a&gt;, &lt;a href=&quot;https://docs.fastpix.io/docs/manage-audio-tracks&quot;&gt;Add own audio tracks&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.DeleteTrackAsync(System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete audio / subtitle track
            
            <remarks>
            This endpoint allows you to delete an existing audio or subtitle track from a media file. Once deleted, the track will no longer be available for playback.<br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            <br/>
            1. Send a DELETE request to this endpoint, replacing `{mediaId}` with the media ID, and `{trackId}` with the ID of the track you want to remove.<br/>
            <br/>
            2. The track will be deleted from the media file, and you will receive a confirmation response.<br/>
            <br/>
            #### Webhook events<br/>
            <br/>
            1. After successfully deleting a track, your system will receive the webhook event **video.media.track.deleted**.<br/>
            <br/>
            2. Once the media file is updated to reflect the track removal, a &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediaupdated&quot;&gt;video.media.updated&lt;/a&gt; event will be triggered.<br/>
            <br/>
            <br/>
            #### Example<br/>
            Suppose you uploaded an audio track in Italian for a video but later realize it&apos;s incorrect or no longer needed. By calling this API, you can remove the specific track while keeping the rest of the media file unchanged. This is useful when:<br/>
            <br/>
              - A track was mistakenly added and needs to be removed.<br/>
              - The content owner requests the removal of a specific subtitle or audio track.<br/>
              - A new version of the track will be uploaded to replace the existing one.<br/>
              <br/>
            Related guides: &lt;a href=&quot;https://docs.fastpix.io/docs/manage-subtitle-tracks&quot;&gt;Add own subtitle tracks&lt;/a&gt;, &lt;a href=&quot;https://docs.fastpix.io/docs/manage-audio-tracks&quot;&gt;Add own audio tracks&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.GenerateSubtitlesAsync(System.String,System.String,Fastpix.Models.Components.TrackSubtitlesGenerateRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Generate track subtitle
            
            <remarks>
            This endpoint allows you to generate subtitles for an existing audio track in a media file. By calling this API, you can generate subtitles automatically using speech recognition<br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Send a `POST` request to this endpoint, replacing `{mediaId}` with the media ID and `{trackId}` with the track ID.<br/>
            <br/>
            2. Provide the necessary details in the request body, including the languageName and languageCode.<br/>
            <br/>
            3. Receive a response containing a unique subtitle track ID and its details.<br/>
            <br/>
            #### Webhook Events<br/>
            <br/>
            1. Once the subtitle track is generated and ready, you will receive the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediasubtitlegeneratedready&quot;&gt;video.media.subtitle.generated.ready&lt;/a&gt;.<br/>
            <br/>
            2. Finally, an update event &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediaupdated&quot;&gt;video.media.updated&lt;/a&gt; will notify your system about the media&apos;s updated status.<br/>
            <br/>
            &lt;/br&gt; Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/add-auto-generated-subtitles-to-videos&quot;&gt;Add auto-generated subtitles&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.UpdateSourceAccessAsync(System.String,Fastpix.Models.Requests.UpdatedSourceAccessRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update the source access of a media by ID
            
            <remarks>
            This endpoint allows you to update the `sourceAccess` setting of an existing media file. The `sourceAccess` parameter determines whether the original media file is accessible or restricted. Setting this to `true` enables access to the media source, while setting it to `false` restricts access. <br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Make a `PATCH` request to this endpoint, replacing `{mediaId}` with the ID of the media you want to update.<br/>
            <br/>
            2. Include the updated `sourceAccess` parameter in the request body.<br/>
            <br/>
            3. Receive a response confirming the update to the media&apos;s source access status.<br/>
            4. Webhook events: &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediasourceready&quot;&gt;video.media.source.ready&lt;/a&gt;, &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediasourcedeleted&quot;&gt;video.media.source.deleted&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.UpdateMp4SupportAsync(System.String,Fastpix.Models.Requests.UpdatedMp4SupportRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update the mp4Support of a media by ID
            
            <remarks>
            This endpoint allows you to update the `mp4Support` setting of an existing media file using its media ID. You can specify the MP4 support level, such as `none`, `capped_4k`, `audioOnly`, or a combination of `audioOnly`, `capped_4k`, in the request payload.<br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Send a PATCH request to this endpoint, replacing `{mediaId}` with the media ID.<br/>
            <br/>
            2. Provide the desired `mp4Support` value in the request body.<br/>
            <br/>
            3. Receive a response confirming the update, including the media&apos;s updated MP4 support status.<br/>
            <br/>
            #### MP4 Support Options<br/>
            <br/>
            - `none` – MP4 support is disabled for this media.<br/>
            <br/>
            - `capped_4k` – The media will have mp4 renditions up to 4K resolution.<br/>
            <br/>
            - `audioOnly` – The media will generate an m4a file containing only the audio track.<br/>
            <br/>
            - `audioOnly,capped_4k` – The media will have both an audio-only m4a file and mp4 renditions up to 4K resolution.<br/>
            <br/>
            #### Webhook events<br/>
            <br/>
            - &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediamp4supportready&quot;&gt;video.media.mp4Support.ready&lt;/a&gt; – Triggered when the MP4 support setting is successfully updated.<br/>
            <br/>
            #### Example<br/>
            Suppose you have a video uploaded to the FastPix platform, and you want to allow users to download the video in MP4 format. By setting &quot;mp4Support&quot;: &quot;capped_4k&quot;, the system will generate an MP4 rendition of the video up to 4K resolution, making it available for download via the stream URL(`https://stream.fastpix.io/{playbackId}/{capped-4k.mp4 | audio.m4a}`).<br/>
            If you want users to stream only the audio from the media file, you can set &quot;mp4Support&quot;: &quot;audioOnly&quot;. This will provide an audio-only stream URL that allows users to listen to the media without video.<br/>
            By setting &quot;mp4Support&quot;: &quot;audioOnly,capped_4k&quot;, both options will be enabled. Users will be able to download the MP4 video and also stream just the audio version of the media.<br/>
            <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/mp4-support-for-offline-viewing&quot;&gt;Use MP4 support for offline viewing&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.GetInputInfoAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get info of media inputs
            
            <remarks>
            Allows you to retrieve detailed information about the media inputs associated with a specific media item. You can use this endpoint to verify the media file&apos;s input URL, track creation status, and container format. The `mediaId` (either `uploadId` or `id`) must be provided to fetch the information. <br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            Upon making a `GET` request with the mediaId, FastPix returns a response with: <br/>
            <br/>
            * The public storage input `url` of the uploaded media file. <br/>
            <br/>
            * Information about the `tracks` associated with the media, including both video and audio tracks, indicating whether they have been successfully created. <br/>
            <br/>
            * The format of the uploaded media file container (e.g., MP4, MKV). <br/>
            <br/>
            This endpoint is particularly useful for ensuring that all necessary tracks (video and audio) have been correctly associated with the media during the upload or media creation process.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IManageVideos.ListMediaClipsAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Fastpix.Models.Components.SortOrder},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get all clips of a media
            
            <remarks>
            This endpoint retrieves a list of all media clips associated with a given source media ID. It helps in organizing and managing media&apos;s efficiently by providing metadata, including clip media IDs and other relevant details.<br/>
            <br/>
            A media clip is a segmented portion of an original media file (source media). Clips are often created for various purposes such as previews, highlights, or customized edits. This API allows you to fetch all such clips linked to a specific source media, making it easier to track and manage clips.<br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            - The endpoint returns metadata for all media clips associated with the given `sourceMediaId`.<br/>
            - Results are paginated to efficiently handle large datasets.<br/>
            - Each entry includes detailed metadata such as media `id`, `duration`, and `status`.<br/>
            - Helps in organizing clips effectively by providing structured information.<br/>
            <br/>
            <br/>
            #### Example<br/>
            <br/>
            Imagine you&apos;re managing a video editing platform where users upload full-length videos and create short clips for social media sharing. To keep track of all clips linked to a particular video, you call this API with the sourceMediaId. The response provides a list of all associated clips, allowing you to manage, edit, or repurpose them as needed.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/create-clips-from-existing-media&quot;&gt;Create clips from existing media&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMedia.ListAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Fastpix.Models.Components.SortOrder},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get list of all media
            
            <remarks>
            This endpoint returns a list of all media files uploaded to FastPix within a specific workspace. Each media entry contains data such as the media `id`, `createdAt`, `status`, `type` and more. It allows you to retrieve an overview of your media assets, making it easier to manage and review them. <br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            Use the access token and secret key related to the workspace in the request header. When called, the API provides a paginated response containing all the media items in that specific workspace. This is helpful for retrieving a large volume of media and managing content in bulk. <br/>
            <br/>
            <br/>
            <br/>
            #### Example<br/>
            You&apos;re managing a video platform and need to check all the uploaded media in your library to ensure no outdated or low-quality content is being served. Using this endpoint, you can retrieve a complete list of media, allowing you to filter, sort, or update items as needed.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMedia.AddTrackAsync(System.String,Fastpix.Models.Requests.AddMediaTrackRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Add audio / subtitle track
            
            <remarks>
            This endpoint allows you to add an audio or subtitle track to an existing media file using its `mediaId`. You need to provide the track `url` along with its `type` (audio or subtitle), `languageName` and `languageCode` in the request payload.<br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Send a POST request to this endpoint, replacing `{mediaId}` with the media ID (`uploadId` or `id`).<br/>
            <br/>
            2. Provide the necessary details in the request body.<br/>
            <br/>
            3. Receive a response containing a unique track ID and the details of the newly added track.<br/>
            <br/>
            <br/>
            #### Webhook events<br/>
            <br/>
            1. After successfully adding a track, your system will receive the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediatrackcreated&quot;&gt;video.media.track.created&lt;/a&gt;.<br/>
            <br/>
            2. Once the track is processed and ready, you will receive the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/transform-media-events#videomediatrackready&quot;&gt;video.media.track.ready&lt;/a&gt;.<br/>
            <br/>
            3. Finally, an update event &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediaupdated&quot;&gt;video.media.updated&lt;/a&gt; will notify your system about the media&apos;s updated status.<br/>
            <br/>
            <br/>
            #### Example<br/>
            Suppose you have a video uploaded to the FastPix platform, and you want to add an Italian audio track to it. By calling this API, you can attach an external audio file (https://static.fastpix.io/music-1.mp3) to the media file. Similarly, if you need to add subtitles in different languages, you can specify type: `subtitle` with the corresponding subtitle `url`, `languageCode` and `languageName`.<br/>
            <br/>
            Related guides: &lt;a href=&quot;https://docs.fastpix.io/docs/manage-subtitle-tracks&quot;&gt;Add own subtitle tracks&lt;/a&gt;, &lt;a href=&quot;https://docs.fastpix.io/docs/manage-audio-tracks&quot;&gt;Add own audio tracks&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMediaAI.UpdateSummaryAsync(System.String,Fastpix.Models.Requests.UpdateMediaSummaryRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Generate video summary
            
            <remarks>
            This endpoint allows you to generate the summary for an existing media.<br/>
            <br/>
            #### How it works<br/>
            1. Send a PATCH request to this endpoint, replacing `&lt;mediaId&gt;` with the unique ID of the media for which you wish to generate a summary.<br/>
            2. Include the `generate` parameter in the request body.<br/>
            3. Include the `summaryLength` parameter, specify the desired length of the summary in words (e.g., 120 words), this determines how concise or detailed the summary will be. If no specific summary length is provided, the default length will be 100 words. <br/>
            4. The response will include the updated media data and confirmation of the changes applied.<br/>
            <br/>
            You can use the &lt;a href=&quot;https://docs.fastpix.io/docs/ai-events#videomediaaisummaryready&quot;&gt;video.mediaAI.summary.ready&lt;/a&gt; webhook event to track and notify about the summary generation.<br/>
            <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            **Use case**: This is particularly useful when a user uploads a video and later chooses to generate a summary without needing to re-upload the video.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/generate-video-summary&quot;&gt;Video summary&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMediaAI.UpdateChaptersAsync(System.String,Fastpix.Models.Requests.UpdateMediaChaptersRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Generate video chapters
            
            <remarks>
            This endpoint enables you to generate chapters for an existing media file.<br/>
            <br/>
            #### How it works<br/>
            1. Make a `PATCH` request to this endpoint, replacing `&lt;mediaId&gt;` with the ID of the media for which you want to generate chapters.<br/>
            2. Include the `chapters` parameter in the request body to enable.<br/>
            3. The response will contain the updated media data, confirming the changes made.<br/>
            <br/>
            You can use the &lt;a href=&quot;https://docs.fastpix.io/docs/ai-events#videomediaaichaptersready&quot;&gt;video.mediaAI.chapters.ready&lt;/a&gt; webhook event to track and notify about the chapters generation.<br/>
            <br/>
            **Use case:** This is particularly useful when a user uploads a video and later decides to enable chapters without re-uploading the entire video.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/reference/update-media-chapters&quot;&gt;Video chapters&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMetrics.ListBreakdownAsync(Fastpix.Models.Requests.ListBreakdownValuesRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List breakdown values
            
            <remarks>
            Retrieves breakdown values for a specified metric and timespan, allowing you to analyze the performance of your content based on various dimensions. It provides insights into how different factors contribute to the overall metrics. <br/>
            <br/>
            #### How it works<br/>
            <br/>
              1. Before using this endpoint, you can call the &lt;a href=&quot;https://docs.fastpix.io/reference/list_dimensions&quot;&gt;List Dimensions&lt;/a&gt; endpoint to retrieve all available dimensions that can be used in your query. <br/>
            <br/>
              2. Make a `GET` request to this endpoint with the required `metricId` and other query parameters. <br/>
            <br/>
              3. Receive a response containing the breakdown values for the specified metric, grouped and filtered according to your parameters. <br/>
            <br/>
              4. Upon successful retrieval, the response will include the breakdown values based on the specified parameters. Note that the time values ( `totalWatchTime` and `totalPlayingTime` ) are in milliseconds. <br/>
            <br/>
            <br/>
            #### Example<br/>
            <br/>
            <br/>
            A developer wants to analyze how watch time varies across different device types. By calling this endpoint for the `playing_time` metric and filtering by `device_type`, they can understand how engagement differs between mobile, desktop, and tablet users. This data will guide optimization efforts for different platforms. <br/>
            <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/metrics-overview&quot;&gt;Understand data definitions&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMetrics.ListOverallAsync(Fastpix.Models.Requests.ListOverallValuesMetricId,Fastpix.Models.Requests.ListOverallValuesTimespan,System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List overall values
            
            <remarks>
            Retrieves overall values for a specified metric, providing summary statistics that help you understand the performance of your content. The response includes key metrics such as `totalWatchTime`, `uniqueViews`, `totalPlayTime` and `totalViews`. <br/>
            <br/>
            #### How it works<br/>
            <br/>
              1. Before using this endpoint, you can call the &lt;a href=&quot;https://docs.fastpix.io/reference/list_dimensions&quot;&gt;list dimensions&lt;/a&gt; endpoint to retrieve all available dimensions that can be used in your query. <br/>
            <br/>
              2. Make a `GET` request to this endpoint with the required `metricId` and other query parameters. <br/>
            <br/>
              3. Receive a response containing the overall values for the specified metric, which may vary based on the applied filters. <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            #### Key fields in response<br/>
            <br/>
            <br/>
              * **value:** The specific metric value calculated based on the applied filters. <br/>
              * **totalWatchTime:** Total time watched across all views, represented in milliseconds. <br/>
              * **uniqueViews:** The count of unique viewers who interacted with the content. <br/>
              * **totalViews:** The total number of views recorded. <br/>
              * **totalPlayTime:** Total time spent playing the video, represented in milliseconds. <br/>
              * **globalValue:** A global metric value that reflects the overall performance of the specified metric across the entire dataset for the given timespan. This value is not affected by specific filters. <br/>
            <br/>
            <br/>
              Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/metrics-overview&quot;&gt;Understand data definitions&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMetrics.GetTimeseriesAsync(Fastpix.Models.Requests.GetTimeseriesDataRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get timeseries data
            
            <remarks>
            This endpoint retrieves timeseries data for a specified metric, providing insights into how the metric values change over time. The response includes an array of data points, each representing the metric&apos;s value at specific intervals. <br/>
            <br/>
            Each data point contains the following fields: <br/>
            <br/>
            * **intervalTime:** The timestamp for the data point indicating when the metric value was recorded. <br/>
            * **metricValue:** The value of the specified metric at the given interval, reflecting the performance or engagement level during that time. <br/>
            * **numberOfViews:** The total number of views recorded during that interval, providing context for the metric value. <br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IMetrics.ListComparisonValuesAsync(Fastpix.Models.Requests.ListComparisonValuesTimespan,System.String,System.Nullable{Fastpix.Models.Requests.ListComparisonValuesDimension},System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List comparison values
            
            <remarks>
            This endpoint allows you to compare multiple metrics across specified dimensions. You can specify the metrics you want to compare in the query parameters, and the response will include the relevant metrics for the specified dimensions. <br/>
            <br/>
            #### How it works <br/>
            <br/>
              1. Before making a request to this endpoint, call the &lt;a href=&quot;https://docs.fastpix.io/reference/list_dimensions&quot;&gt;list dimensions&lt;/a&gt; endpoint to obtain all available dimensions that can be used for comparison. <br/>
            <br/>
              2. Make a `GET` request to this endpoint with the desired metrics specified in the query parameters. <br/>
            <br/>
              3. Receive a response containing the comparison values for the specified metrics across the selected dimensions. <br/>
            <br/>
            <br/>
              Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/understand-dashboard-ui#compare-metrics&quot;&gt;Compare metrics in dashboard&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.AccessPolicy">
            <summary>
            Access policy for media content
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.AddTrackRequest">
            <summary>
            Contains details about the track being added to the media file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackRequest.Url">
            <summary>
            The direct URL of the track file. It should point to a valid audio or subtitle file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackRequest.Type">
            <summary>
            Specifies the type of track being added. It can be either `audio` or `subtitle`.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackRequest.LanguageCode">
            <summary>
            The BCP 47 language code representing the track&apos;s language.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackRequest.LanguageName">
            <summary>
            The full name of the language corresponding to the `languageCode`.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.AddTrackRequestType">
            <summary>
            Specifies the type of track being added. It can be either `audio` or `subtitle`.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.AddTrackResponse">
            <summary>
            Contains details about the track that was added or updated.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackResponse.Id">
            <summary>
            The unique identifier of the track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackResponse.Type">
            <summary>
            Specifies the type of track (audio or subtitle).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackResponse.Url">
            <summary>
            The direct URL of the track file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackResponse.LanguageCode">
            <summary>
            The BCP 47 language code representing the track&apos;s language.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AddTrackResponse.LanguageName">
            <summary>
            The full name of the language corresponding to the `languageCode`.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.AddTrackResponseType">
            <summary>
            Specifies the type of track (audio or subtitle).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AudioInput.Type">
            <summary>
            Type of overlay (currently only supports &apos;audio&apos;).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AudioInput.SwapTrackUrl">
            <summary>
            URL of the audio track to replace the existing audio in the video.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.AudioInput.ImposeTracks">
            <summary>
            List of additional audio tracks to overlay on the video.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.AudioInputType">
            <summary>
            Type of overlay (currently only supports &apos;audio&apos;).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.BadRequestError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.BadRequestError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.BadRequestError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.BadRequestError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.BasicAccessPolicy">
            <summary>
            Basic access policy for media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.BrowserNameDimensiondetails.Value">
            <summary>
            The specific metric value calculated based on the applied filters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.BrowserNameDimensiondetails.UniqueCount">
            <summary>
            The count of unique viewers who interacted with the content.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.BrowserNameDimensiondetails.Count">
            <summary>
            The count of viewers.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateLiveStreamRequest.PlaybackSettings">
            <summary>
            Displays the result of the playback settings.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateLiveStreamRequest.InputMediaSettings">
            <summary>
            Displays the result of the input Media settings.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreateLiveStreamRequestMaxResolution">
            <summary>
            Max resolution can be used to control the maximum resolution your media is encoded, stored, and streamed at.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.Subtitles">
            <summary>
            Generates subtitle files for audio/video files.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.AccessPolicy">
            <summary>
            Determines whether access to the streamed content is kept private or available to all.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.Mp4Support">
            <summary>
            &quot;capped_4k&quot;: Generates an mp4 video file up to 4k resolution &quot;audioOnly&quot;: Generates an m4a audio file of the media file &quot;audioOnly,capped_4k&quot;: Generates both video and audio media files for offline viewing<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.SourceAccess">
            <summary>
            The sourceAccess parameter determines whether the original media file is accessible. Set to true to enable access or false to restrict it
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.OptimizeAudio">
            <summary>
            normalize volume of the audio track. This is available for pre-recorded content only.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.MaxResolution">
            <summary>
            The maximum resolution tier determines the highest quality your media will be available in.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.Chapters">
            <summary>
            Enable or disable the chapters feature for the media. Set to `true` to enable chapters or `false` to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequest.NamedEntities">
            <summary>
            Enable or disable named entity extraction. Set to `true` to enable or `false` to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreateMediaRequestAccessPolicy">
            <summary>
            Determines whether access to the streamed content is kept private or available to all.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequestDomains.DefaultPolicy">
            <summary>
            Policy action type
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequestDomains.Allow">
            <summary>
            A list of domain names or patterns that are explicitly allowed access. <br/>
            
            <remarks>
            This list is only effective when the `defaultPolicy` is set to `deny`.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequestDomains.Deny">
            <summary>
            A list of domain names or patterns that are explicitly denied access. <br/>
            
            <remarks>
            This list is only effective when the `defaultPolicy` is set to `allow`.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreateMediaRequestLanguageCode">
            <summary>
            Language codes are concise, standardized symbols that denote languages, utilizing either two or three characters for identification. The language code must be compliant with the BCP 47 standard to ensure compatibility. (for text only).<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreateMediaRequestMaxResolution">
            <summary>
            The maximum resolution tier determines the highest quality your media will be available in.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreateMediaRequestMp4Support">
            <summary>
            &quot;capped_4k&quot;: Generates an mp4 video file up to 4k resolution &quot;audioOnly&quot;: Generates an m4a audio file of the media file &quot;audioOnly,capped_4k&quot;: Generates both video and audio media files for offline viewing<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequestUserAgents.DefaultPolicy">
            <summary>
            Policy action type
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequestUserAgents.Allow">
            <summary>
            A list of user agents (identified by string names or patterns) that are explicitly allowed access. <br/>
            
            <remarks>
            This list is only effective when the `defaultPolicy` is set to `deny`.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaRequestUserAgents.Deny">
            <summary>
            A list of user agents (identified by string names or patterns) that are explicitly denied access. <br/>
            
            <remarks>
            This list is only effective when the `defaultPolicy` is set to `allow`.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.Id">
            <summary>
            The Media is assigned a universal unique identifier, which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.Trial">
            <summary>
            FastPix allows for a free trial. Create as many media files as you like during the trial period. Remember, each clip can only be 10 seconds long and will be deleted after 24 hours. Also, all trial content will have the FastPix logo watermark.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.Status">
            <summary>
            Determines the media&apos;s status, which can be one of the possible values.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.CreatedAt">
            <summary>
            Time the media was created, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.UpdatedAt">
            <summary>
            Time the media was updated, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.PlaybackIds">
            <summary>
            A collection of Playback ID objects utilized for crafting HLS playback URLs.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaResponse.MaxResolution">
            <summary>
            The maximum resolution tier determines the highest quality your media will be available in.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreateMediaResponseMaxResolution">
            <summary>
            The maximum resolution tier determines the highest quality your media will be available in.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateMediaSuccessResponse.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequest.Name">
            <summary>
            Name of the playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequest.ReferenceId">
            <summary>
            Unique string value assigned by user to the playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequest.Type">
            <summary>
            For a smart playlist metadata is required.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequest.Description">
            <summary>
            Description for a playlist (Optional).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequest.PlayOrder">
            <summary>
            Determines the insertion order of media into playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequest.Limit">
            <summary>
            Optional parameter to limit no. of media in a playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequest.Metadata">
            <summary>
            Required when playlist type is smart - media created between startDate and endDate of createdDate will be add, similarily updatedDate (Optional)
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreatePlaylistRequestMetadata">
            <summary>
            Required when playlist type is smart - media created between startDate and endDate of createdDate will be add, similarily updatedDate (Optional)
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequestMetadata.CreatedDate">
            <summary>
            Date range with start and end dates.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreatePlaylistRequestMetadata.UpdatedDate">
            <summary>
            Date range with start and end dates.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreatePlaylistRequestType">
            <summary>
            For a smart playlist metadata is required.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateResponse.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.CreateSigningKeyResponseDTO">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateSigningKeyResponseDTO.Id">
            <summary>
            A unique identifier is generated by FastPix for the signing keys.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateSigningKeyResponseDTO.PrivateKey">
            <summary>
            A private key is a byte encoded secret key used to create a signed JSON Web Token (JWT) for authentication.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.CreateSigningKeyResponseDTO.CreatedAt">
            <summary>
            Time the media was generated, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.DataPagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DataPagination.TotalRecords">
            <summary>
            The total number of records retrieved within the timeframe.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DataPagination.CurrentOffset">
            <summary>
            The current offset value. <br/>
            
            <remarks>
            <br/>
            Default: 1<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DataPagination.OffsetCount">
            <summary>
            The total number of offsets based on limit.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.DateRange">
            <summary>
            Date range with start and end dates.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DeleteSigningKeyResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Details.PlayerSourceBitrate">
            <summary>
            The player_source_bitrate represents the bitrate of the video stream that is being played, measured in bits per second (bps). This value indicates the quality of the video being streamed, with higher bitrates typically corresponding to better video quality but requiring more bandwidth.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Details.PlayerSourceCodec">
            <summary>
            The player_source_codec represents the video or audio codec being used to decode and play the media. A codec is a technology used to compress and decompress digital media files, enabling efficient transmission and storage while maintaining quality.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Details.PlayerSourceHeight">
            <summary>
            The player_source_height refers to the vertical resolution of the video being played, measured in pixels. This value represents the height dimension of the video frame and is part of the overall resolution of the video (e.g., 1920x1080, where the height is 1080 pixels).<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Details.PlayerSourceWidth">
            <summary>
            The player_source_width refers to the horizontal resolution of the video being played, measured in pixels. This value represents the width dimension of the video frame and is part of the overall video resolution (e.g., 1920x1080, where the width is 1920 pixels).<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.DirectUpload">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DirectUpload.Id">
            <summary>
            When creating the upload, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DirectUpload.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DirectUpload.Status">
            <summary>
            Determines the media&apos;s status, which can be one of the possible values.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DirectUpload.Url">
            <summary>
            The url hosts the media file for FastPix, which needs to be download to use further.  It supports formats like MP3, MP4, MOV, MKV, or TS, and includes text tracks for subtitles/CC (SRT file/VTT file). While FastPix can handle various audio and video formats and codecs, using standard inputs can help with optimal processing speed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DirectUpload.Timeout">
            <summary>
            The duration set for the validity of the upload URL. If the upload isn&apos;t completed within this timeframe, it&apos;s marked as timed out.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DirectUpload.CorsOrigin">
            <summary>
            Upload media directly from a device using the url name or enter &apos;*&apos; to allow all.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DirectUploadResponse.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.DomainRestrictions">
            <summary>
            Restrictions based on the originating domain of a request
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DomainRestrictions.DefaultPolicy">
            <summary>
            Policy action type
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DomainRestrictions.Allow">
            <summary>
            A list of domain names or patterns that are explicitly allowed access
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DomainRestrictions.Deny">
            <summary>
            A list of domain names or patterns that are explicitly denied access
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DrmIdResponse.Id">
            <summary>
            The unique identifier of the DRM configuration.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.DuplicateMp4SupportError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DuplicateMp4SupportError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DuplicateMp4SupportError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DuplicateMp4SupportError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.DuplicateReferenceIdErrorResponseError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DuplicateReferenceIdErrorResponseError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DuplicateReferenceIdErrorResponseError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.DuplicateReferenceIdErrorResponseError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.Percentage">
            <summary>
            views affected by the specific errors.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.Notes">
            <summary>
            Information about the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.Message">
            <summary>
            error message or description.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.LastSeen">
            <summary>
            The timestamp of when the error was last observed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.Id">
            <summary>
            unique identifier for the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.Description">
            <summary>
            description of the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.Count">
            <summary>
            Number of occurrences of the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ErrorDetails.Code">
            <summary>
            Error code associated with the specific error.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.ErrorDetailsPercentage">
            <summary>
            views affected by the specific errors.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Event.EventName">
            <summary>
            Name of the event.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Event.EventTime">
            <summary>
            The unix epoch timestamp when the event was captured.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Event.ViewerTime">
            <summary>
            The unix epoch timestamp which represents the actual time the event has occured.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Event.PlayerPlayheadTime">
            <summary>
            The player_playhead_time represents the current position of the playhead (the point in the video that is being watched) on the video seekbar, measured in milliseconds. This value indicates how far into the video playback has progressed at any given moment.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.EventTime">
            <summary>
            The unix epoch timestamp when the event was captured.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.FieldError.Field">
            <summary>
            Displays the specific field associated with the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.FieldError.Message">
            <summary>
            Error message for the field
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.ForbiddenError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ForbiddenError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ForbiddenError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ForbiddenError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.ForbiddenResponseError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ForbiddenResponseError.Code">
            <summary>
            Forbidden response
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ForbiddenResponseError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GenerateTrackResponse">
            <summary>
            Represents the response for a successfully generated subtitle track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GenerateTrackResponse.Id">
            <summary>
            A unique identifier for the generated track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GenerateTrackResponse.Type">
            <summary>
            The type of track generated (&quot;subtitle&quot;).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GenerateTrackResponse.LanguageCode">
            <summary>
            The BCP 47 language code representing the language of the generated track.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GenerateTrackResponse.LanguageName">
            <summary>
            The full name of the language for the generated track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GenerateTrackResponse.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GenerateTrackResponseLanguageCode">
            <summary>
            The BCP 47 language code representing the language of the generated track.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GenerateTrackResponseType">
            <summary>
            The type of track generated (&quot;subtitle&quot;).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetAllPlaylistsResponse.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetAllSigningKeyResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetAllSigningKeyResponse.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetAllSigningKeyResponseDTO.Id">
            <summary>
            A unique identifier is generated by FastPix for the signing keys.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetAllSigningKeyResponseDTO.CreatedAt">
            <summary>
            Time the media was generated, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetAllSigningKeyResponseDTO.Workspace">
            <summary>
            It display a specific setup where all operations are conducted.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetAllSigningKeyResponseDTO.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.StreamKey">
            <summary>
            A unique stream key is generated for streaming, allowing the user to start streaming on any third-party platform using this key.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.SrtSecret">
            <summary>
            A secret used for securing the SRT stream. This ensures that only authorized users can access the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.Trial">
            <summary>
            FastPix allows for a to trial the live stream for free. The duration of trial streams is five minutes. After five minutes of activity, the trial stream is turned off, and the recorded asset is removed after a day.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.Status">
            <summary>
            The current live stream status can be one of four values:Idle, Preparing, Active or Disabled.The Idle status signifies that there isn&apos;t a broadcast in progress.The preparing status indicates that the stream is getting prepared. while, the Active status indicates that a broadcast is currently in progress. The Disabled status means that no more RTMPS streams can be published.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.MaxResolution">
            <summary>
            Max resolution can be used to control the maximum resolution your media is encoded, stored, and streamed at.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.MaxDuration">
            <summary>
            The maximum duration in seconds that a live stream can have before it ends the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.CreatedAt">
            <summary>
            It is the moment when the stream was created Time the media was generated, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.ReconnectWindow">
            <summary>
            In case the software streaming the live, gets disrupted for any reason and gets disconnected from FastPix, the reconnect window specifies the time span FastPix will wait before ending the stream. Before starting the stream, you can set the reconnect window time which is up to 1800 seconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.EnableRecording">
            <summary>
            When set to true, the livestream will be recorded and stored for later viewing purposes. If set to false, the livestream will not be recorded.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.MediaPolicy">
            <summary>
            Determines whether the recorded stream should be publicly accessible or private in Live to VOD (Video on Demand).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.EnableDvrMode">
            <summary>
            Enables DVR (Digital Video Recorder) functionality for the live stream. When set to true, viewers can pause, rewind, and resume playback during the live broadcast. This allows time-shifted viewing of the stream while it is still ongoing.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.PlaybackIds">
            <summary>
            A collection of Playback ID objects utilized for crafting HLS playback urls.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.MediaIds">
            <summary>
            A set of media IDs created after the livestream ends. (live to VOD)
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetCreateLiveStreamResponseDTO.SrtPlaybackResponse">
            <summary>
            This object contains the livestream playback response details for SRT Protocol
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GetPublicPemUsingSigningKeyIdResponseDTO">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetPublicPemUsingSigningKeyIdResponseDTO.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetPublicPemUsingSigningKeyIdResponseDTO.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GetPublicPemUsingSigningKeyIdResponseDTOData">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetPublicPemUsingSigningKeyIdResponseDTOData.WorkspaceId">
            <summary>
            FastPix generates a unique identifier for each workspace.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetPublicPemUsingSigningKeyIdResponseDTOData.PublicKey">
            <summary>
            A public key is a byte encoded key used to create a signed JSON Web Token (JWT) for authentication.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GetStreamsResponse">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetStreamsResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetStreamsResponse.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.GetStreamsResponse.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.GlobalValue">
            <summary>
            A global metric value that reflects the overall performance of the specified metric across the entire dataset for the given timespan.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.HTTPMetadata.Response">
            <summary>
            Raw HTTP response; suitable for custom response parsing
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.HTTPMetadata.Request">
            <summary>
            Raw HTTP request; suitable for debugging
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ImposeTrack.Url">
            <summary>
            URL of the audio track to impose on the video.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ImposeTrack.StartTime">
            <summary>
            Start time (in seconds) of the imposed audio in the video.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ImposeTrack.EndTime">
            <summary>
            End time (in seconds) of the imposed audio in the video.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ImposeTrack.FadeInLevel">
            <summary>
            Level of fade-in effect (in seconds) at the start of the imposed audio.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ImposeTrack.FadeOutLevel">
            <summary>
            Level of fade-out effect (in seconds) at the end of the imposed audio.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.InputMediaSettings">
            <summary>
            Displays the result of the input Media settings.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InputMediaSettings.MaxResolution">
            <summary>
            Max resolution can be used to control the maximum resolution your media is encoded, stored, and streamed at.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InputMediaSettings.ReconnectWindow">
            <summary>
            In case the software streaming the live, gets disrupted for any reason and gets disconnected from FastPix, the reconnect window specifies the time span FastPix will wait before ending the stream. Before starting the stream, you can set the reconnect window time which is up to 1800 seconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InputMediaSettings.MediaPolicy">
            <summary>
            Basic access policy for media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InputMediaSettings.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InputMediaSettings.EnableDvrMode">
            <summary>
            Enables DVR (Digital Video Recorder) functionality for the live stream. When set to true, viewers can pause, rewind, and resume playback during the live broadcast. This allows time-shifted viewing of the stream while it is still ongoing.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.InvalidPermissionError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InvalidPermissionError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InvalidPermissionError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InvalidPermissionError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.InvalidPlaylistIdResponseError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InvalidPlaylistIdResponseError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InvalidPlaylistIdResponseError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.InvalidPlaylistIdResponseError.Fields">
            <summary>
            It is an collection of objects, where each object contains information about a specific field and a corresponding error message.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Item.Value">
            <summary>
            The specific metric value calculated based on the applied filters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Item.Type">
            <summary>
            value can be score that ranges from 0 to 100
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Item.Name">
            <summary>
            value can be score that ranges from 0 to 100
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Item.Metric">
            <summary>
            The metric field represents the name of the Key Performance Indicator (KPI) being tracked or analyzed. It identifies a specific measurable aspect of the video playback experience, such as buffering time, video start failure rate, or playback quality.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Item.Measurement">
            <summary>
            value can be avg, sum, count or 95th
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.LanguageCode">
            <summary>
            Language code for content localization
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.LiveNotFoundErrorError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveNotFoundErrorError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveNotFoundErrorError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveNotFoundErrorError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveStreamDeleteResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.LivestreamgetResponse">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LivestreamgetResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LivestreamgetResponse.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.LiveStreamPagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveStreamPagination.TotalRecords">
            <summary>
            It gives the total number of media assets that are accessible overall.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveStreamPagination.CurrentOffset">
            <summary>
            Determines the current point for data retrieval within a paginated list.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveStreamPagination.OffsetCount">
            <summary>
            The offset count is expressed as total records by limit.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.LiveStreamResponseDTO">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveStreamResponseDTO.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.LiveStreamResponseDTO.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.Thumbnail">
            <summary>
            A video thumbnail is a still image that acts as the preview image for your video.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.Id">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.WorkspaceId">
            <summary>
            A unique identifier is generated by FastPix for the workspace.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.MaxResolution">
            <summary>
            The maximum resolution specified by the user for the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.SourceResolution">
            <summary>
            The actual resolution of the uploaded media. This represents the native quality of the source media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.Status">
            <summary>
            Determines the media&apos;s status, which can be one of the possible values.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.Mp4Support">
            <summary>
            Determines the type of MP4 support for the media.   - **none**: Disables MP4 support.   - **capped_4k**: Enables MP4 downloads with resolutions up to 4K.   - **audioOnly**: Provides an MP4 stream containing only the audio.   - **audioOnly,capped_4k**: Enables both MP4 video downloads (up to 4K) and an audio-only stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.SourceAccess">
            <summary>
            The sourceAccess parameter determines whether the original media file is accessible. Set to true to enable access or false to restrict it
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.PlaybackIds">
            <summary>
            A collection of Playback ID objects utilized for crafting HLS playback URLs.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.Tracks">
            <summary>
            A media consists of different media tracks, like video, audio, and subtitle, all combined.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.Duration">
            <summary>
            The time span of the media, measured in seconds with a maximum allowable duration of 12 hours per individual media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.FrameRate">
            <summary>
            Frame rate quantifies the speed at which frames are displayed per second. It represents the range of frames available for a specific track. If the frame rate of the input file is indeterminable, it will be indicated by a value of -1.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.AspectRatio">
            <summary>
            The aspect ratio of a video is a value that describes the relative shape of a video based on its width and height.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.CreatedAt">
            <summary>
            Time the media was created, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Media.UpdatedAt">
            <summary>
            Time the media was updated, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaCancelResponse">
            <summary>
            Response returned when an upload is cancelled.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.UploadId">
            <summary>
            The unique identifier of the cancelled upload.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.Trial">
            <summary>
            Indicates if the upload was a trial.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.Status">
            <summary>
            The status of the upload after cancellation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.Url">
            <summary>
            The upload URL (if available) after cancellation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.Timeout">
            <summary>
            The timeout value for the upload.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.CorsOrigin">
            <summary>
            CORS origin allowed for the upload.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.MaxResolution">
            <summary>
            The maximum resolution allowed for the upload.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.AccessPolicy">
            <summary>
            The access policy for the upload.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaCancelResponse.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaClipNotFoundError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipNotFoundError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipNotFoundError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipNotFoundError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.Thumbnail">
            <summary>
            A video thumbnail that acts as a preview image for the video.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.Id">
            <summary>
            The unique identifier assigned to the media by FastPix.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.SourceMediaId">
            <summary>
            The ID of the original source media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.WorkspaceId">
            <summary>
            The unique identifier for the workspace associated with the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.Metadata">
            <summary>
            Tag a video in &quot;key&quot; : &quot;value&quot; pairs for searchable metadata. Maximum 10 entries, 255 characters each.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.MaxResolution">
            <summary>
            The maximum resolution specified for the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.SourceResolution">
            <summary>
            The actual resolution of the uploaded media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.Status">
            <summary>
            The current processing status of the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.SourceAccess">
            <summary>
            Indicates whether the original media file is accessible.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.GeneratedSubtitles">
            <summary>
            Generated subtitle tracks associated with the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.IsAudioOnly">
            <summary>
            Indicates whether the media contains only audio.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.SubtitleAvailable">
            <summary>
            Indicates whether subtitles are available for the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.Duration">
            <summary>
            The total duration of the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.AspectRatio">
            <summary>
            The aspect ratio of the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.CreatedAt">
            <summary>
            Timestamp of when the media was created.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseData.UpdatedAt">
            <summary>
            Timestamp of when the media was last updated.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaClipResponseMaxResolution">
            <summary>
            The maximum resolution specified for the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponsePagination.TotalRecords">
            <summary>
            Total number of records available.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponsePagination.CurrentOffset">
            <summary>
            The starting offset of the current result set.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponsePagination.OffsetCount">
            <summary>
            The number of items returned in the current response.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponsePlaybackId.Id">
            <summary>
            The unique identifier for playback.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponsePlaybackId.AccessPolicy">
            <summary>
            The access policy of the playback.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaClipResponseSourceResolution">
            <summary>
            The actual resolution of the uploaded media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseTrack.Id">
            <summary>
            The unique identifier for the media track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseTrack.Type">
            <summary>
            The type of media track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseTrack.Width">
            <summary>
            The width of the video track (applicable to video only).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseTrack.Height">
            <summary>
            The height of the video track (applicable to video only).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseTrack.Status">
            <summary>
            The current processing status of the track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseTrack.LanguageCode">
            <summary>
            The language code of the audio or subtitle track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaClipResponseTrack.LanguageName">
            <summary>
            The language name of the audio or subtitle track.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaClipResponseType">
            <summary>
            The type of media track.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaIdsRequest">
            <summary>
            The list of mediaId(s) you want to perform the operation on.rds by limit.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaMaxResolution">
            <summary>
            The maximum resolution specified by the user for the media.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaMp4Support">
            <summary>
            Determines the type of MP4 support for the media.   - **none**: Disables MP4 support.   - **capped_4k**: Enables MP4 downloads with resolutions up to 4K.   - **audioOnly**: Provides an MP4 stream containing only the audio.   - **audioOnly,capped_4k**: Enables both MP4 video downloads (up to 4K) and an audio-only stream.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaNotFoundError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaNotFoundError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaNotFoundError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaNotFoundError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaOrPlaybackNotFoundError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaOrPlaybackNotFoundError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaOrPlaybackNotFoundError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MediaOrPlaybackNotFoundError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaSourceResolution">
            <summary>
            The actual resolution of the uploaded media. This represents the native quality of the source media.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MediaType">
            <summary>
            Type of media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsBreakdownDetails.Views">
            <summary>
            Total count of view sessions for a paricular video content.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsBreakdownDetails.Value">
            <summary>
            The specific metric value calculated based on the applied filters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsBreakdownDetails.TotalWatchTime">
            <summary>
            Total time watched across all views, represented in milliseconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsBreakdownDetails.TotalPlayingTime">
            <summary>
            Total time spent playing the video, represented in milliseconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsBreakdownDetails.Field">
            <summary>
            the value of dimension or filter value on which the aggregation is to be applied.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MetricsBreakdownDetailsValue">
            <summary>
            The specific metric value calculated based on the applied filters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsComparisonDetails.Value">
            <summary>
            The specific metric value calculated based on the applied filters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsComparisonDetails.Type">
            <summary>
            value can be score that ranges from 0 to 100
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsComparisonDetails.Name">
            <summary>
            value can be score that ranges from 0 to 100
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsComparisonDetails.Metric">
            <summary>
            The metric field represents the name of the Key Performance Indicator (KPI) being tracked or analyzed. It identifies a specific measurable aspect of the video playback experience, such as buffering time, video start failure rate, or playback quality.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MetricsOverallDataDetails">
            <summary>
            Retrieves overall values for a specified metric
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsOverallDataDetails.Value">
            <summary>
            metric value calculated based on the applied filters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsOverallDataDetails.TotalWatchTime">
            <summary>
            Total time watched across all views, represented in milliseconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsOverallDataDetails.UniqueViews">
            <summary>
            The count of unique viewers who interacted with the content.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsOverallDataDetails.TotalViews">
            <summary>
            The total number of views recorded.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsOverallDataDetails.TotalPlayTime">
            <summary>
            Total time spent playing the video, represented in milliseconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsOverallDataDetails.GlobalValue">
            <summary>
            A global metric value that reflects the overall performance of the specified metric across the entire dataset for the given timespan.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MetricsOverallDataDetailsValue">
            <summary>
            metric value calculated based on the applied filters.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MetricsOverallMetaDataDetails">
            <summary>
            Metadata that has to be paased for metric calculations.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsOverallMetaDataDetails.Aggregation">
            <summary>
            defines the field or dimension on which the aggregation is to be   applied.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MetricsTimeseriesDataDetails">
            <summary>
            The metric&apos;s value at specific time intervals.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsTimeseriesDataDetails.IntervalTime">
            <summary>
            The timestamp for the data point indicating when the metric value was recorded.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsTimeseriesDataDetails.MetricValue">
            <summary>
            The value of the specified metric at the given interval.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsTimeseriesDataDetails.NumberOfViews">
            <summary>
            The total number of views recorded during that interval.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MetricsTimeseriesMetaDataDetails">
            <summary>
            Retrieves breakdown values for a specified metric and timespan
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsTimeseriesMetaDataDetails.Granularity">
            <summary>
            the unit for aggregating the timeseries data.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.MetricsTimeseriesMetaDataDetails.Aggregation">
            <summary>
            defines the field or dimension on which the aggregation is to be   applied.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.MetricValue">
            <summary>
            The value of the specified metric at the given interval.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Moderation.Type">
            <summary>
            Type of media content
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.NotFoundErrorPlaybackIdError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.NotFoundErrorPlaybackIdError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.NotFoundErrorPlaybackIdError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.NotFoundErrorPlaybackIdError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.NotFoundErrorSimulcastError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.NotFoundErrorSimulcastError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.NotFoundErrorSimulcastError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.NotFoundErrorSimulcastError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Pagination.TotalRecords">
            <summary>
            It gives the total number of media assets that are accessible overall.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Pagination.CurrentOffset">
            <summary>
            Offset determines the current point for data retrieval within a paginated list. 
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Pagination.OffsetCount">
            <summary>
            The offset count is expressed as total records by limit
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchLiveStreamRequest.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchLiveStreamRequest.ReconnectWindow">
            <summary>
            In case the software streaming the live, gets disrupted for any reason and gets disconnected from FastPix, the reconnect window specifies the time span FastPix will wait before ending the stream. Before starting the stream, you can set the reconnect window time which is up to 1800 seconds.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PatchResponseData">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.StreamKey">
            <summary>
            A unique stream key is generated for streaming, allowing the user to start streaming on any third-party platform using this key.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.SrtSecret">
            <summary>
            A secret used for securing the SRT stream. This ensures that only authorized users can access the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.Trial">
            <summary>
            FastPix allows for a to trial the live stream for free. The duration of trial streams is five minutes. After five minutes of activity, the trial stream is turned off, and the recorded asset is removed after a day.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.Status">
            <summary>
            The current live stream status can be one of four values:Idle, Preparing, Active or Disabled.The Idle status signifies that there isn&apos;t a broadcast in progress.The preparing status indicates that the stream is getting prepared. while, the Active status indicates that a broadcast is currently in progress. The Disabled status means that no more RTMPS streams can be published.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.MaxResolution">
            <summary>
            Max resolution can be used to control the maximum resolution your media is encoded, stored, and streamed at.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.MaxDuration">
            <summary>
            The maximum duration in seconds that a live stream can have before it ends the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.CreatedAt">
            <summary>
            It is the moment when the stream was created Time the media was generated, defined as a localDateTime (UTC Time).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.ReconnectWindow">
            <summary>
            In case the software streaming the live, gets disrupted for any reason and gets disconnected from FastPix, the reconnect window specifies the time span FastPix will wait before ending the stream. Before starting the stream, you can set the reconnect window time which is up to 1800 seconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.EnableRecording">
            <summary>
            When set to true, the livestream will be recorded and stored for later viewing purposes. If set to false, the livestream will not be recorded.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.MediaPolicy">
            <summary>
            Determines whether the recorded stream should be publicly accessible or private in Live to VOD (Video on Demand).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseData.SrtPlaybackResponse">
            <summary>
            This object contains the livestream playback response details for SRT Protocol
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PatchResponseDTO">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseDTO.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PatchResponseDTO.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Placement.XAlign">
            <summary>
            Horizontal alignment of the watermark.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Placement.XMargin">
            <summary>
            Horizontal margin from the edge of the video.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Placement.YAlign">
            <summary>
            Vertical alignment of the watermark.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Placement.YMargin">
            <summary>
            Vertical margin from the edge of the video.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaybackId">
            <summary>
            A collection of Playback ID objects utilized for crafting HLS playback urls.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackId.Id">
            <summary>
            A unique identifier is generated by FastPix for the playbacks.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackId.AccessPolicy">
            <summary>
            Access policy for media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackId.AccessRestrictions">
            <summary>
            Controls access based on domains and user agents. Defines a default policy (either &quot;allow&quot; or &quot;deny&quot;) and provides lists for explicitly allowed or denied domains and user agents.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaybackIdAccessRestrictions">
            <summary>
            Controls access based on domains and user agents. Defines a default policy (either &quot;allow&quot; or &quot;deny&quot;) and provides lists for explicitly allowed or denied domains and user agents.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdAccessRestrictions.Domains">
            <summary>
            Restrictions based on the originating domain of a request (e.g., whether requests from certain websites should be allowed or blocked).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdAccessRestrictions.UserAgents">
            <summary>
            Restrictions based on the user agent (which is typically a string sent by browsers or bots identifying themselves).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaybackIdDomains">
            <summary>
            Restrictions based on the originating domain of a request (e.g., whether requests from certain websites should be allowed or blocked).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdDomains.DefaultPolicy">
            <summary>
            Policy action type
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdDomains.Allow">
            <summary>
            A list of domains that are explicitly allowed access.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdDomains.Deny">
            <summary>
            A list of domains that are explicitly blocked from accessing the resource.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdRequest.AccessPolicy">
            <summary>
            Basic access policy for media content
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaybackIdResponse">
            <summary>
            A collection of Playback ID objects utilized for crafting HLS playback urls.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdResponse.Id">
            <summary>
            Unique identifier for the playbackId
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdResponse.AccessPolicy">
            <summary>
            Determines if access to the streamed content is kept private or available to all.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaybackIdSuccessResponse">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdSuccessResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdSuccessResponseData.Id">
            <summary>
            Unique identifier for the playbackId
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdSuccessResponseData.AccessPolicy">
            <summary>
            Determines if access to the streamed content is kept private or available to all.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaybackIdUserAgents">
            <summary>
            Restrictions based on the user agent (which is typically a string sent by browsers or bots identifying themselves).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdUserAgents.DefaultPolicy">
            <summary>
            Policy action type
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdUserAgents.Allow">
            <summary>
            A list of specific user agents that are allowed to access the resource.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackIdUserAgents.Deny">
            <summary>
            A list of specific user agents that are blocked.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaybackSettings">
            <summary>
            Displays the result of the playback settings.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaybackSettings.AccessPolicy">
            <summary>
            Basic access policy for media content
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlayerHeight">
            <summary>
            Player Height refers to the vertical dimension, measured in pixels, of the video player as it appears on the webpage.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlayerWidth">
            <summary>
            Player Width refers to the width of the player displayed within the webpage, measured in pixels.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.Id">
            <summary>
            The unique id of the playlist
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.Name">
            <summary>
            The name of the playlist set by the user
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.ReferenceId">
            <summary>
            Unique string value assigned by user to the playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.Type">
            <summary>
            type of the playlist, when it was created
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.Description">
            <summary>
            Description of the playlist set by the user.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.WorkspaceId">
            <summary>
            The unique id of the workspace in which the playlist is present.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.CreatedAt">
            <summary>
            Timestamp of playlist creation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.UpdatedAt">
            <summary>
            Playlist&apos;s most recent update timestamp.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseData.MediaCount">
            <summary>
            No. of media present in the playlist
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseMediaList.CreatedAt">
            <summary>
            Timestamp of media creation in the workspace.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseMediaList.Duration">
            <summary>
            Duration of the media in hh:mm:ss format.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseMediaList.Id">
            <summary>
            unique id of the particular media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseMediaList.SourceResolution">
            <summary>
            source resolution of the media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseMediaList.Status">
            <summary>
            status of the media, only media with ready status will be added to playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistByIdResponseMediaList.Thumbnail">
            <summary>
            thumbnail for the particular media.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaylistByIdResponseType">
            <summary>
            type of the playlist, when it was created
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaylistCreatedResponse">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedResponse.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaylistCreatedSchema">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.Id">
            <summary>
            Upon creating a new play,ist, FastPix assigns a unique identifier to the playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.Name">
            <summary>
            The name to the playlist set by the user.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.ReferenceId">
            <summary>
            Unique string value assigned by user to the playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.Type">
            <summary>
            Type will be either smart or manual, as sent in the request body.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.Description">
            <summary>
            The description to the playlist set by the user.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.PlayOrder">
            <summary>
            Determines the insertion order of media into playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.Metadata">
            <summary>
            date range filter used when creating the smart playlist
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.WorkspaceId">
            <summary>
            Id of the workspace
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.CreatedAt">
            <summary>
            Timestamp of playlist creation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.UpdatedAt">
            <summary>
            Playlist&apos;s most recent update timestamp.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchema.MediaCount">
            <summary>
            No. of media present in the playlist
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMediaList.CreatedAt">
            <summary>
            timestamp of media creation in the workspace
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMediaList.Duration">
            <summary>
            duration of the media in hh:mm:ss format
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMediaList.Id">
            <summary>
            unique identifier of the media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMediaList.SourceResolution">
            <summary>
            The source resolution of the media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMediaList.Status">
            <summary>
            The status of the video in the workspace. Only media which are in ready status are added into the playlist
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMediaList.Thumbnail">
            <summary>
            Thumbnail to the particular media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaylistCreatedSchemaMetadata">
            <summary>
            date range filter used when creating the smart playlist
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMetadata.CreatedDate">
            <summary>
            Date range with start and end dates.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.PlaylistCreatedSchemaMetadata.UpdatedDate">
            <summary>
            Date range with start and end dates.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaylistCreatedSchemaType">
            <summary>
            Type will be either smart or manual, as sent in the request body.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PlaylistOrder">
            <summary>
            Determines the insertion order of media into playlist.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.PolicyAction">
            <summary>
            Policy action type
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Segment1.Url">
            <summary>
            URL of the segment to be added.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Segment1.InsertAt">
            <summary>
            The timestamp at which the segment should be inserted.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Segment2.Url">
            <summary>
            URL of the segment to be added.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Segment2.InsertAtEnd">
            <summary>
            Flag indicating the segment should be inserted at the end.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SigningKeyNotFoundErrorError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SigningKeyNotFoundErrorError.Code">
            <summary>
            An error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SigningKeyNotFoundErrorError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SigningKeyWorkspaceDTO.Id">
            <summary>
            FastPix generates a unique identifier for each workspace.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SigningKeyWorkspaceDTO.Name">
            <summary>
            Designated title for the workspace.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SigningKeyWorkspaceDTO.WorkspaceType">
            <summary>
            Describes the type of a workspace.  Possible value: QA, staging, production, or development.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastdeleteResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastRequest.Url">
            <summary>
            The RTMPS hostname, combined with the application name, is crucial for connecting to third-party live streaming services and transmitting the live stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastRequest.StreamKey">
            <summary>
            A unique stream key is generated for streaming, allowing the user to start streaming on any third-party platform using this key.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastRequest.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SimulcastResponse">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastResponse.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SimulcastResponseData">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastResponseData.SimulcastId">
            <summary>
            When you create the new simulcast, FastPix assign a universal unique identifier which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastResponseData.Url">
            <summary>
            The RTMPS hostname, combined with the application name, is crucial for connecting to third-party live streaming services and transmitting the live stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastResponseData.StreamKey">
            <summary>
            A unique stream key is generated for streaming, allowing the user to start streaming on any third-party platform using this key.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastResponseData.IsEnabled">
            <summary>
            When the value is true, the simulcast will be enabled for the given stream
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastResponseData.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SimulcastUnavailableError">
            <summary>
            Returns the problem that has occured.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUnavailableError.Code">
            <summary>
            An error code indicating the type of the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUnavailableError.Message">
            <summary>
            A descriptive message providing more details for the error<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUnavailableError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateRequest.IsEnabled">
            <summary>
            When the value is set to false, the simulcast will be disabled for the given stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateRequest.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SimulcastUpdateResponse">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateResponse.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateResponse.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SimulcastUpdateResponseData">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateResponseData.SimulcastId">
            <summary>
            When you create the new simulcast, FastPix assign a universal unique identifier which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateResponseData.Url">
            <summary>
            The RTMP hostname, combined with the application name, is crucial for connecting to third-party live streaming services and transmitting the live stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateResponseData.StreamKey">
            <summary>
            A unique stream key is generated for streaming, allowing the user to start streaming on any third-party platform using this key.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateResponseData.IsEnabled">
            <summary>
            When the value is set to false, the simulcast will be disabled for the given stream
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SimulcastUpdateResponseData.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot;:&quot;value&quot;s pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SingingKeysPagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SingingKeysPagination.TotalRecords">
            <summary>
            It gives the total number of media assets that are accessible overall.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SingingKeysPagination.CurrentOffset">
            <summary>
            Determines the current point for data retrieval within a paginated list. 
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SingingKeysPagination.OffsetCount">
            <summary>
            The offset count is expressed as total records by limit.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SortOrder">
            <summary>
            The values in the list can be arranged in two ways: DESC (Descending) or ASC (Ascending).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SrtPlaybackResponse">
            <summary>
            This object contains the livestream playback response details for SRT Protocol
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SrtPlaybackResponse.SrtPlaybackStreamId">
            <summary>
            A unique identifier for the SRT playback stream. This ID is used to distinguish between different playback streams
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SrtPlaybackResponse.SrtPlaybackSecret">
            <summary>
            A playback secret used for securing the SRT playback stream. This ensures that only authorized users can access the playback
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.Status">
            <summary>
            The current processing status of the media.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.StreamAlreadyDisabledErrorError">
            <summary>
            Contains details explaining why the request failed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.StreamAlreadyDisabledErrorError.Code">
            <summary>
            HTTP status code indicating the nature of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.StreamAlreadyDisabledErrorError.Message">
            <summary>
            A short message summarizing the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.StreamAlreadyDisabledErrorError.Description">
            <summary>
            A detailed explanation indicating that the stream is already in a disabled state and cannot be disabled again.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.StreamAlreadyEnabledErrorError">
            <summary>
            Contains details explaining why the request failed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.StreamAlreadyEnabledErrorError.Code">
            <summary>
            HTTP status code indicating the nature of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.StreamAlreadyEnabledErrorError.Message">
            <summary>
            A short message summarizing the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.StreamAlreadyEnabledErrorError.Description">
            <summary>
            A detailed explanation indicating that the stream is already active, idle, or preparing, and therefore cannot be enabled again.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.SubtitleInput">
            <summary>
            Generates subtitle files for audio/video files.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SubtitleInput.Type">
            <summary>
            Defines the type of input.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SubtitleInput.Url">
            <summary>
            The direct URL of the subtitle file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SubtitleInput.LanguageName">
            <summary>
            Name of the language in which the subtitles will be generated.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SubtitleInput.LanguageCode">
            <summary>
            Language code for content localization
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.Subtitles">
            <summary>
            Generates subtitle files for audio/video files.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Subtitles.LanguageName">
            <summary>
            Name of the language in which the subtitles will be generated.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Subtitles.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Subtitles.LanguageCode">
            <summary>
            Language codes are concise, standardized symbols that denote languages, utilizing either two or three characters for identification. The language code must be compliant with the BCP 47 standard to ensure compatibility. (for text only).<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SuccessResponse.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.SuccessResponse.Data">
            <summary>
            Array of response data
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Summary.Generate">
            <summary>
            Enable or disable the summary feature for the media. Set to true to enable summary or false to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Summary.SummaryLength">
            <summary>
            Specifies the desired word count for the generated summary. <br/>
            
            <remarks>
            - The value must be between **30** and **250** words.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.Percentage">
            <summary>
            views affected by the specific errors.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.UniqueViewersEffectedPercentage">
            <summary>
            percentage of unique viewers affected by the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.Notes">
            <summary>
            Information about the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.Message">
            <summary>
            error message or description.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.LastSeen">
            <summary>
            The timestamp of when the error was last observed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.Id">
            <summary>
            unique identifier for the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.Description">
            <summary>
            description of the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.Count">
            <summary>
            Number of occurrences of the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TopErrorDetails.Code">
            <summary>
            Error code associated with the specific error.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.TopErrorDetailsPercentage">
            <summary>
            views affected by the specific errors.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.Track">
            <summary>
            A media consists of different media tracks, like video, audio, and subtitle, all combined.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Track.Id">
            <summary>
            FastPix generates a unique identifier for each track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Track.Type">
            <summary>
            Defines the type of input. This option is mandatory.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Track.Width">
            <summary>
            Track width denotes the range of widths applicable to a specific track. Currently, this setting can be modified only for video tracks
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Track.Height">
            <summary>
            Track height denotes the range of height applicable to a specific track. Currently, this setting can be modified only for video tracks.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Track.FrameRate">
            <summary>
            Frame rate quantifies the speed at which frames are displayed per second. It represents the range of frames available for a specific track. If the frame rate of the input file is indeterminable, it will be indicated by a value of -1.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Track.ClosedCaptions">
            <summary>
            Indicates if the track contains closed captions.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.TrackDuplicateRequestError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrackDuplicateRequestError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrackDuplicateRequestError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrackDuplicateRequestError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.TrackSubtitlesGenerateRequest">
            <summary>
            Contains details for generating subtitle tracks for a media file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrackSubtitlesGenerateRequest.LanguageName">
            <summary>
            The full name of the language in which subtitles will be generated.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrackSubtitlesGenerateRequest.Metadata">
            <summary>
            You can search for videos with specific key value pairs using metadata, when you tag a video in &quot;key&quot; : &quot;value&quot; pairs. Dynamic Metadata allows you to define a key that allows any value pair. You can have maximum of 255 characters and upto 10 entries are allowed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrackSubtitlesGenerateRequest.LanguageCode">
            <summary>
            Language code for content localization
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.TrialPlanRestrictionErrorError">
            <summary>
            Contains details explaining why the request failed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrialPlanRestrictionErrorError.Code">
            <summary>
            HTTP status code indicating the nature of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrialPlanRestrictionErrorError.Message">
            <summary>
            A short message summarizing the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.TrialPlanRestrictionErrorError.Description">
            <summary>
            A detailed explanation of the error indicating that the operation is restricted under the trial plan. This typically occurs when certain features are gated for paid users only.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.UnauthorizedError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UnauthorizedError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UnauthorizedError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UnauthorizedError.Description">
            <summary>
            A detailed explanation of the possible causes for the error.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.UnAuthorizedResponseError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UnAuthorizedResponseError.Code">
            <summary>
            UnAuthorized response
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UnAuthorizedResponseError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.UniqueViewersEffectedPercentage">
            <summary>
            percentage of unique viewers affected by the specific error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdatePlaylistRequest.Name">
            <summary>
            New name to the playlist.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdatePlaylistRequest.Description">
            <summary>
            Updated description to the playlist.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.UpdateTrackRequest">
            <summary>
            Contains details about the track being added to the media file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackRequest.Url">
            <summary>
            The direct URL of the track file. It should point to a valid audio or subtitle file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackRequest.LanguageCode">
            <summary>
            The BCP 47 language code representing the track&apos;s language.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackRequest.LanguageName">
            <summary>
            The full name of the language corresponding to the `languageCode`.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.UpdateTrackResponse">
            <summary>
            Contains details about the track that was added or updated.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackResponse.Id">
            <summary>
            The unique identifier of the track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackResponse.Type">
            <summary>
            Specifies the type of track (audio or subtitle).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackResponse.Url">
            <summary>
            The direct URL of the track file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackResponse.LanguageCode">
            <summary>
            The BCP 47 language code representing the track&apos;s language.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UpdateTrackResponse.LanguageName">
            <summary>
            The full name of the language corresponding to the `languageCode`.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.UpdateTrackResponseType">
            <summary>
            Specifies the type of track (audio or subtitle).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.UserAgentRestrictions">
            <summary>
            Restrictions based on the user agent
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UserAgentRestrictions.DefaultPolicy">
            <summary>
            Policy action type
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UserAgentRestrictions.Allow">
            <summary>
            A list of user agents that are explicitly allowed access
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.UserAgentRestrictions.Deny">
            <summary>
            A list of user agents that are explicitly denied access
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.ValidationErrorResponseError">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ValidationErrorResponseError.Code">
            <summary>
            Displays the error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ValidationErrorResponseError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ValidationErrorResponseError.Fields">
            <summary>
            It is an collection of objects, where each object contains information about a specific field and a corresponding error message.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.Type">
            <summary>
            Defines the type of input.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.Url">
            <summary>
            The url hosts the media file for FastPix, which needs to be downloaded to use further. It supports formats like MP3, MP4, MOV, MKV, or TS, and includes text tracks for subtitles/CC (SRT file/VTT file). While FastPix can handle various audio and video formats and codecs, using standard inputs can help with optimal processing speed.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.StartTime">
            <summary>
            Start time indicates where encoding should begin within the video file. For example, if you want to encode a segment from 3 minutes (180 seconds) to 6 minutes (360 seconds) in a 10-minute (600 seconds) video, the start time is 3 minutes (180 seconds). Note: Start time is always mentioned in seconds.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.EndTime">
            <summary>
            End time indicates where encoding should end within the video file. For example, if you want to encode a segment from 3 minutes (180 seconds) to 6 minutes (360 seconds) in a 10-minute (600 seconds) video, the end time is 6 minutes (360 seconds). Note: End time is always mentioned in seconds.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.IntroUrl">
            <summary>
            The url of the intro video which is to be added at the start of the video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.OutroUrl">
            <summary>
            The url of the outro video which is to be added at the end of the video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.ExpungeSegments">
            <summary>
            The list of the startTime-endTime of the segments to be removed from the actual video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.VideoInput.Segments">
            <summary>
            A list of media segments to be added or processed. Each segment includes details such as the URL of the media file and instructions on where it should be inserted in the final media composition. A segment can either specify an exact timestamp  (`insertAt`) or indicate that it should be added at the end (`insertAtEnd`).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.ViewNotFoundError">
            <summary>
            Returns the problem that has occured
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewNotFoundError.Code">
            <summary>
            An error code indicating the type of the error.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewNotFoundError.Message">
            <summary>
            A descriptive message providing more details for the error.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.Views">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.AsnName">
            <summary>
            The Name associated with the asnId.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.AsnId">
            <summary>
            The unique identifier assigned to an Autonomous System (AS) on the Internet. The ASN is used to identify and exchange routing information between different networks.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.MediaId">
            <summary>
            The media Id value if the video asset is internal to FastPix.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.BufferCount">
            <summary>
            Buffer Count represents the number of rebuffering events occurring during the video view.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.BufferFill">
            <summary>
            Buffer Fill indicates the total time, in milliseconds, that viewers wait for rebuffering per video view.         <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.BufferFrequency">
            <summary>
            Buffer Frequency measures the rate at which rebuffering events occur, expressed as events per millisecond.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Cdn">
            <summary>
            Content Delivery Network (CDN) refers to the network infrastructure responsible for delivering the video content to the viewer.        <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.City">
            <summary>
            City indicates the geographical location of the viewer accessing the video content.        <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Continent">
            <summary>
            Continent represents the continent name of the viewer accessing the video content.    <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.CountryCode">
            <summary>
            Country Code denotes the two-letter ISO code representing the country of origin for the viewer accessing the video content.      <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Country">
            <summary>
            Country represents the coded text that represents the country name of viewer accessing the video content.      <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom1">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom2">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom3">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom4">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom5">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom6">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom7">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom8">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom9">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Custom10">
            <summary>
            User defined metadata. Only accessible once it is enabled in the organization settings.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.WorkspaceId">
            <summary>
            It is a unique identifier associated with a specific workspace within the FastPix platform.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Events">
            <summary>
            Events specifies the order of events journey of the video playback <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ExitBeforeVideoStart">
            <summary>
            Exit Before Video Start indicates whether a viewer abandoned the video before it started playing, typically due to long loading times.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ExperimentName">
            <summary>
            Experiment Name is used in A/B testing scenarios to categorize video views into different experiments.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.InsertTimestamp">
            <summary>
            Insert Timestamp refers to the time instance when the view is started.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Latitude">
            <summary>
            Latitude refers to the geographical coordinate representing the north-south position of the viewer&apos;s location, truncated to one decimal place.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.FpLiveStreamId">
            <summary>
            FastPix Live Stream ID is the unique identifier associated with a live stream video media within the FastPix Video platform.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.LiveStreamLatency">
            <summary>
            Live Stream Latency measures the average time taken from the point of ingest to the point of display for live stream video views.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Longitude">
            <summary>
            Longitude denotes the geographical coordinate representing the east-west position of the viewer&apos;s location, truncated to one decimal place.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PageLoadTime">
            <summary>
            Page Load Time measures the time from when the user initiates loading the page to when all resources are loaded on the page.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PageContext">
            <summary>
            Page Context provides contextual information about the type of page being accessed.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewPageUrl">
            <summary>
            View Page URL denotes the URL address of the web page where the video content is being accessed.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.FpPlaybackId">
            <summary>
            FastPix Playback ID refers to the unique identifier associated with the playback instance of a video, particularly used in FastPix Video platform.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlaybackScore">
            <summary>
            Playback Success Score represents a numerical value indicating the success or quality of the video playback experience.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerAutoplayOn">
            <summary>
            Player Autoplay On indicates whether the video player automatically initiated playback of the video content.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ErrorCode">
            <summary>
            Error Code is an identifier representing a specific type of error that occurred during video playback, potentially leading to playback failure.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ErrorMessage">
            <summary>
            Error Message is a descriptive message generated by the video player when an error occurs during playback, associated with an error code.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerHeight">
            <summary>
            Player Height refers to the vertical dimension, measured in pixels, of the video player as it appears on the webpage.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerInstanceId">
            <summary>
            Player Instance ID is a unique identifier that distinguishes each instance of the Player class created when initializing a video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerLanguage">
            <summary>
            Player Language indicates the language used for text elements within the video player interface.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.FpSDK">
            <summary>
            FastPix SDK Name identifies the name of the FastPix Player SDK utilized within the player workspace.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.FpSDKVersion">
            <summary>
            FastPix SDK Version specifies the version of the FastPix Player SDK integrated into the player.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerName">
            <summary>
            Player Name serves to differentiate various configurations or types of players used across the website or application.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerPoster">
            <summary>
            Player Poster refers to the image displayed as a preview before the video playback begins.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerPreloadOn">
            <summary>
            Player Preload On indicates whether the player is configured to preload the video content upon page load.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerRemotePlayed">
            <summary>
            Player Remote Played specifies if the video is being remotely played to devices such as AirPlay or Chromecast, obtained from the SDK.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerSoftwareVersion">
            <summary>
            Player Software Version indicates the version number of the player software installed.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerSoftwareName">
            <summary>
            Player Software Name denotes the software utilized for video playback within the player workspace.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoSourceDomain">
            <summary>
            Video Source Domain identifies the domain from which the video source originates.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoSourceDuration">
            <summary>
            Video Source Duration represents the duration of the video source content, measured in milliseconds.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerSourceHeight">
            <summary>
            Player Source Height denotes the vertical dimension, measured in pixels, of the source video content being transmitted to the player.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoSourceHostname">
            <summary>
            Video Source Hostname represents the hostname of the video<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoSourceStreamType">
            <summary>
            Video Source Stream Type denotes the type of stream used by the player, although it is currently unused.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoSourceType">
            <summary>
            Video Source Type denotes the format of the video source as determined by the player, including formats<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoSourceUrl">
            <summary>
            Player Source URL refers to the URL of the video source accessed by the player.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerSourceWidth">
            <summary>
            Source Width represents the width of the source video as perceived by the player, typically measured in pixels.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerInitializationTime">
            <summary>
            Player Initialisation Time measures the duration, in milliseconds, from the initialization of the player within the webpage to its readiness to receive further instructions.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerVersion">
            <summary>
            Player Version indicates the version of the player used to render the video content. It is often utilized for performance comparison between different player versions.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerWidth">
            <summary>
            Player Width refers to the width of the player displayed within the webpage, measured in pixels.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.RenderQualityScore">
            <summary>
            Render Quality Score is a decimal value representing the score indicating the perceived quality of the video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.BufferRatio">
            <summary>
            Buffer Ratio refers to the percentage of time during video playback where the viewer experiences buffering or rebuffering events.  <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.StabilityScore">
            <summary>
            Stability Score quantifies the smoothness of video playback, typically represented as a decimal value.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Region">
            <summary>
            Region denotes the geographical region of the viewer accessing the video content.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.SessionId">
            <summary>
            Session ID refers to the unique identifier tracking a viewer&apos;s session within the FastPix platform.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.StartupScore">
            <summary>
            Startup Time Score evaluates the startup performance of the player, usually represented as a decimal value      <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.SubPropertyId">
            <summary>
            Sub Property ID denotes the unique identifier assigned to FastPix properties, previously linked with a specific workspace.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoStartupTime">
            <summary>
            Video Startup Time measures the duration, in milliseconds, from the initialization of the player within the webpage to its readiness to receive further instructions.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.UpdatedTimestamp">
            <summary>
            Updated Timestamp refers to when the record is updated to a particular Video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.UsedFullScreen">
            <summary>
            Used Fullscreen denotes whether the viewer utilized the full-screen mode while watching the video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoContentType">
            <summary>
            Video Content Type specifies the classification of the video content.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoDuration">
            <summary>
            Video Duration represents the length of the video, provided in milliseconds, typically supplied to FastPix via custom metadata.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoId">
            <summary>
            Video ID refers to an internal identifier assigned by the user or system to uniquely identify a particular video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoLanguage">
            <summary>
            Video Language denotes the primary audio language of the video content, assuming it remains unchanged after playback initiation.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoSeries">
            <summary>
            Video Series denotes the name of a series to which the video content belongs.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoStartupFailed">
            <summary>
            Video Startup Failure is a boolean metric indicating whether a viewer encountered an error before the first frame of the video commenced playback.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoTitle">
            <summary>
            Video Title refers to the title of the video content being viewed.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.AvgRequestLatency">
            <summary>
            Average Request Latency average time it takes for a request to be made and processed during video playback<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.AvgRequestThroughput">
            <summary>
            Average Request Throughput refers to the average throughput or data transfer rate of HTTP requests made during video playback<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.DrmType">
            <summary>
            DRM Type indicates the type of Digital Rights Management (DRM) utilized during video playback<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.DroppedFrameCount">
            <summary>
            Dropped Frame Count represents the number of frames dropped by the video player during playback.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewEnd">
            <summary>
            View End refers to the date and time, in Coordinated Universal Time (UTC), when the video viewing session concluded.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewHasAd">
            <summary>
            View Has Ad is a boolean metric indicating whether an advertisement played or attempted to play during the video view.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewId">
            <summary>
            View ID is a unique identifier assigned to each individual video viewing session.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.MaxDownscaling">
            <summary>
            Maximum Downscale Percentage represents the highest percentage of downscaling applied to the video during the view.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewMaxPlayheadPosition">
            <summary>
            View Max Playhead Position represents the furthest point reached by the playhead during the video view, measured in milliseconds.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.MaxRequestLatency">
            <summary>
            Max request Latency refers to the maximum rate of data transfer (throughput) during requests made by the playback.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.MaxUpscaling">
            <summary>
            Maximum Upscale Percentage represents the highest percentage of upscaling applied to the video during the view.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewPlayingTime">
            <summary>
            Playing Time denotes the total duration of time the video content was actively playing during the view, excluding time spent buffering, seeking, or joining.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewSeekedCount">
            <summary>
            View Seeked Count signifies the number of times the viewer attempted to seek to a new location within the video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewSeekedDuration">
            <summary>
            View Seeked Duration indicates the total duration of time spent waiting for playback to resume after the viewer seeks to a new location. Seek Latency metric in the Dashboard is derived by dividing this value by the view_seek_count.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewStart">
            <summary>
            View Start refers to the date and time, in Coordinated Universal Time (UTC), when the video viewing session commenced.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewTotalContentPlaybackTime">
            <summary>
            View Total content Playback Time represents the cumulative duration of video content watched by the viewer, measured in milliseconds. This metric is internally utilized to calculate upscale and downscale percentages.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.AvgDownscaling">
            <summary>
            Average Downscaling refers to the average reduction in video resolution or quality during the playback of video content.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.AvgUpscaling">
            <summary>
            Average Upscaling refers to the average resolution of the video source is lower than the resolution of the playback device or screen.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.BrowserName">
            <summary>
            Browser denotes the software application utilized by the viewer to access and watch the video content<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.BrowserVersion">
            <summary>
            Browser version signifies the specific version of the browser software employed by the viewer<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.Connectiontype">
            <summary>
            Connection Type signifies the type of network connection utilized by the viewer&apos;s device<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.DeviceType">
            <summary>
            Device Type denotes the classification of the device used by the viewer<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.DeviceManufacturer">
            <summary>
            Device Manufacturer indicates the brand or manufacturer of the device used by the viewer.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.DeviceModel">
            <summary>
            Device Model represents the specific model of the device used by the viewer.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.DeviceName">
            <summary>
            Device Name refers to the name or label assigned to the device used by the viewer.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.QualityOfExperienceScore">
            <summary>
            Quality Of Experience Score quantifies the overall viewer experience based on various metrics, providing a decimal score to assess the quality of the viewing experience.        <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.OsName">
            <summary>
            Operating System signifies the name of software platform utilized by the viewer.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.OsVersion">
            <summary>
            Operating System Version specifies the specific version of the operating system being used by the viewer<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.UserAgent">
            <summary>
            User Agent represents the user agent string transmitted by the viewer&apos;s device to identify itself to the server, typically including information about the device and browser.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.ViewerId">
            <summary>
            Viewer ID refers to a customer-defined identifier representing the viewer who is watching the video stream. It should be anonymized and not contain any personally identifiable information.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.TotalWatchTime">
            <summary>
            Total Watch Time denotes the total duration of video content watched by the viewer, encompassing startup time, playing time, and potential rebuffering time, measured in milliseconds.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.AverageBitrate">
            <summary>
            Average Bitrate represents the average bitrate of the video content watched by the viewer, expressed in bits per second (bps). This metric provides insight into the quality of the video stream.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.JumpLatency">
            <summary>
            Jump Latency refers to the delay or latency experienced when there is a jump or seek action performed by the viewer while watching a video. <br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.PlayerResolution">
            <summary>
            Player Resolution refers to the resolution of the video player window or viewport where the video content is being displayed.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.Views.VideoResolution">
            <summary>
            videoResolution refers to the resolution of the video being played.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.ViewsByTopContentDetails">
            <summary>
            Retrieves a list of the top video views
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsByTopContentDetails.VideoTitle">
            <summary>
            Title of the video
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsByTopContentDetails.Views">
            <summary>
            Total count of view sessions for a paricular video content.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsByTopContentDetails.UniqueViews">
            <summary>
            Total count of unique video viewers for particular video content.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsCountResponse.Success">
            <summary>
            Indicates whether the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsCountResponse.Data">
            <summary>
            Contains the view count details.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.ViewsCountResponseData">
            <summary>
            Contains the view count details.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsCountResponseData.Views">
            <summary>
            Number of views for the stream or resource.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.ViewId">
            <summary>
            The unique identifier for the viewing session of the user.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.OperatingSystem">
            <summary>
            Operating System signifies the software platform utilized by the viewer<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.Application">
            <summary>
            The browser name of the viewer.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.ViewStartTime">
            <summary>
            The start timestamp of the video view.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.ViewEndTime">
            <summary>
            The end timestamp of the video view.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.VideoTitle">
            <summary>
            The title of the Video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.ErrorCode">
            <summary>
            The code which represents specific issues or failures that occur during playback. These can be implementation specific.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.ErrorMessage">
            <summary>
            The notifications or messages that inform users or developers about issues or failures that have occurred during the playback representing error codes.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.ErrorId">
            <summary>
            The unique identifier which identifies each type of error that occurs.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.Country">
            <summary>
            Country of the viewer.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.ViewWatchTime">
            <summary>
            The watch time represents the time spent watching the video including staruptime, playback time ,buffering time.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.ViewsList.QoeScore">
            <summary>
            The viewer experience encapsulated in the form of score while watching the video.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.WatermarkInput.Type">
            <summary>
            Type of overlay (currently only supports &apos;watermark&apos;).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.WatermarkInput.Url">
            <summary>
            URL of the watermark image.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.WatermarkInput.Width">
            <summary>
            Width of the watermark in percentage or pixels.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.WatermarkInput.Height">
            <summary>
            Height of the watermark in percentage or pixels.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Components.WatermarkInput.Opacity">
            <summary>
            Opacity of the watermark in percentage.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.WatermarkInputType">
            <summary>
            Type of overlay (currently only supports &apos;watermark&apos;).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.XAlign">
            <summary>
            Horizontal alignment of the watermark.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Components.YAlign">
            <summary>
            Vertical alignment of the watermark.
            </summary>
        </member>
        <member name="M:Fastpix.Models.Errors.APIException.#ctor(System.String,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.String)">
            <summary>
            Default API exception.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Errors.BadRequest">
            <summary>
            Bad Request – Stream is either already enabled or cannot be enabled on trial plan.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.BadRequestExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.BadRequestExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.BadRequestException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.DuplicateMp4SupportExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.DuplicateMp4SupportExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.DuplicateMp4SupportException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.DuplicateReferenceIdErrorResponsePayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.DuplicateReferenceIdErrorResponsePayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Errors.DuplicateReferenceIdErrorResponse">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.DuplicateReferenceIdErrorResponse.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.FastPixException.Message">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.FastPixException.Request">
            <summary>
            HTTP Request
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.FastPixException.Response">
            <summary>
            HTTP Response
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.FastPixException.Body">
            <summary>
            HTTP response body
            </summary>
        </member>
        <member name="M:Fastpix.Models.Errors.FastPixException.ToString">
            <summary>
            Detailed Error Message
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ForbiddenExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ForbiddenExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ForbiddenException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ForbiddenResponseExceptionPayload.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ForbiddenResponseExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ForbiddenResponseException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.InvalidPermissionExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.InvalidPermissionExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.InvalidPermissionException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.InvalidPlaylistIdResponseExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.InvalidPlaylistIdResponseExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.InvalidPlaylistIdResponseException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.LiveNotFoundErrorPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.LiveNotFoundErrorPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.LiveNotFoundError.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaClipNotFoundExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaClipNotFoundExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaClipNotFoundException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaNotFoundExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaNotFoundExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaNotFoundException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaOrPlaybackNotFoundExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaOrPlaybackNotFoundExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.MediaOrPlaybackNotFoundException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.NotFoundError.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.NotFoundErrorPlaybackIdPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.NotFoundErrorPlaybackIdPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.NotFoundErrorPlaybackId.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.NotFoundErrorSimulcastPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.NotFoundErrorSimulcastPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.NotFoundErrorSimulcast.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Errors.ResponseValidationException">
            <summary>
            Raised if the response data could not be deserialized into the expected model.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.SigningKeyNotFoundErrorPayload.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.SigningKeyNotFoundErrorPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.SigningKeyNotFoundError.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.SimulcastUnavailableExceptionPayload.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.SimulcastUnavailableExceptionPayload.Error">
            <summary>
            Returns the problem that has occured.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.SimulcastUnavailableException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.StreamAlreadyDisabledErrorPayload.Success">
            <summary>
            Indicates whether the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.StreamAlreadyDisabledErrorPayload.Error">
            <summary>
            Contains details explaining why the request failed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.StreamAlreadyDisabledError.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.StreamAlreadyEnabledErrorPayload.Success">
            <summary>
            Indicates whether the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.StreamAlreadyEnabledErrorPayload.Error">
            <summary>
            Contains details explaining why the request failed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.StreamAlreadyEnabledError.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.TrackDuplicateRequestExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.TrackDuplicateRequestExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.TrackDuplicateRequestException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.TrialPlanRestrictionErrorPayload.Success">
            <summary>
            Indicates whether the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.TrialPlanRestrictionErrorPayload.Error">
            <summary>
            Contains details explaining why the request failed.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.TrialPlanRestrictionError.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.UnauthorizedExceptionPayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.UnauthorizedExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.UnauthorizedException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.UnAuthorizedResponseExceptionPayload.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.UnAuthorizedResponseExceptionPayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.UnAuthorizedResponseException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ValidationErrorResponsePayload.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ValidationErrorResponsePayload.Error">
            <summary>
            Displays details about the reasons behind the request&apos;s failure.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ValidationErrorResponse.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ViewNotFoundExceptionPayload.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ViewNotFoundExceptionPayload.Error">
            <summary>
            Returns the problem that has occured
            </summary>
        </member>
        <member name="P:Fastpix.Models.Errors.ViewNotFoundException.Payload">
            <summary>
             The original data that was passed to this exception.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.AddMediaToPlaylistRequest.PlaylistId">
            <summary>
            The unique id of the playlist you want to perform the operation on.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.AddMediaToPlaylistResponse.PlaylistByIdResponse">
            <summary>
            Added media to playlist successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.AddMediaTrackRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.AddMediaTrackRequestBody.Tracks">
            <summary>
            Contains details about the track being added to the media file.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.AddMediaTrackResponse.Object">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.AddMediaTrackResponseBody">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.AddMediaTrackResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.AddMediaTrackResponseBody.Data">
            <summary>
            Contains details about the track that was added or updated.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CancelUploadRequest.UploadId">
            <summary>
            When uploading the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CancelUploadResponse.Object">
            <summary>
            Upload cancelled successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.CancelUploadResponseBody">
            <summary>
            Upload cancelled successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CancelUploadResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CancelUploadResponseBody.Data">
            <summary>
            Response returned when an upload is cancelled.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ChangeMediaOrderInPlaylistRequest.PlaylistId">
            <summary>
            The unique id of the playlist you want to perform the operation on.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ChangeMediaOrderInPlaylistResponse.PlaylistByIdResponse">
            <summary>
            Added media to playlist successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CompleteLiveStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CompleteLiveStreamResponse.LiveStreamDeleteResponse">
            <summary>
            Stream details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateAPlaylistResponse.PlaylistCreatedResponse">
            <summary>
            Playlist created successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdAccessRestrictions.Domains">
            <summary>
            Restrictions based on the originating domain of a request
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdAccessRestrictions.UserAgents">
            <summary>
            Restrictions based on the user agent
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.CreateMediaPlaybackIdData">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdData.PlaybackIds">
            <summary>
            A collection of Playback ID objects utilized for crafting HLS playback URLs.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdRequest.RequestBody">
            <summary>
            Request body for creating playback id for an media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.CreateMediaPlaybackIdRequestBody">
            <summary>
            Request body for creating playback id for an media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdRequestBody.AccessPolicy">
            <summary>
            Access policy for media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdRequestBody.DrmConfigurationId">
            <summary>
            DRM configuration ID (required if accessPolicy is &apos;drm&apos;)
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdRequestBody.Resolution">
            <summary>
            The maximum resolution for the playback ID.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdResponse.Object">
            <summary>
            Playback id for an media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.CreateMediaPlaybackIdResponseBody">
            <summary>
            Playback id for an media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaPlaybackIdResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateMediaResponse.CreateMediaSuccessResponse">
            <summary>
            Media is created successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateNewStreamResponse.LiveStreamResponseDTO">
            <summary>
            Stream created successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreatePlaybackIdOfStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreatePlaybackIdOfStreamResponse.PlaybackIdSuccessResponse">
            <summary>
            New PlaybackId created successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateSigningKeyResponse.CreateResponse">
            <summary>
            created a signing key successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateSimulcastOfStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.CreateSimulcastOfStreamResponse.SimulcastResponse">
            <summary>
            New Simulcast created successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteAPlaylistRequest.PlaylistId">
            <summary>
            The unique id of the playlist you want to delete.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteAPlaylistResponse.SuccessResponse">
            <summary>
            Playlist deleted successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteLiveStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteLiveStreamResponse.LiveStreamDeleteResponse">
            <summary>
            Stream deleted successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaFromPlaylistRequest.PlaylistId">
            <summary>
            The unique id of the playlist you want to perform the operation on.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaFromPlaylistResponse.PlaylistByIdResponse">
            <summary>
            Deleted media from playlist successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaPlaybackIdRequest.MediaId">
            <summary>
            Return the universal unique identifier for media which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaPlaybackIdRequest.PlaybackId">
            <summary>
            Return the universal unique identifier for playbacks  which can contain a maximum of 255 characters. 
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaPlaybackIdResponse.Object">
            <summary>
            Deleted a Playback Id successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.DeleteMediaPlaybackIdResponseBody">
            <summary>
            Deleted a Playback Id successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaPlaybackIdResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaResponse.Object">
            <summary>
            Delete a video media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.DeleteMediaResponseBody">
            <summary>
            Delete a video media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaTrackRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaTrackRequest.TrackId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaTrackResponse.Object">
            <summary>
            Delete a video media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.DeleteMediaTrackResponseBody">
            <summary>
            Delete a video media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteMediaTrackResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeletePlaybackIdOfStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeletePlaybackIdOfStreamRequest.PlaybackId">
            <summary>
            Unique identifier for the playbackId
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeletePlaybackIdOfStreamResponse.LiveStreamDeleteResponse">
            <summary>
            Stream&apos;s playbackId deleted successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteSigningKeyRequest.SigningKeyId">
            <summary>
            When creating the signing key, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteSigningKeyResponse.DeleteSigningKeyResponseValue">
            <summary>
            successfully fetched all signing keys
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteSimulcastOfStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteSimulcastOfStreamRequest.SimulcastId">
            <summary>
            When you create the new simulcast, FastPix assign a universal unique identifier which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DeleteSimulcastOfStreamResponse.SimulcastdeleteResponse">
            <summary>
            Stream&apos;s simulcast deleted successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.DimensionsId">
            <summary>
            Pass Dimensions id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaAccessRestrictions.Domains">
            <summary>
            Restrictions based on the originating domain of a request
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaAccessRestrictions.UserAgents">
            <summary>
            Restrictions based on the user agent
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaModeration.Type">
            <summary>
            Type of media content
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.DirectUploadVideoMediaMp4Support">
            <summary>
            Generates MP4 video up to 4K (&quot;capped_4k&quot;), m4a audio only (&quot;audioOnly&quot;), or both for offline viewing.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.DirectUploadVideoMediaRequest">
            <summary>
            Request body for direct upload
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaRequest.CorsOrigin">
            <summary>
            Upload media directly from a device using the URL name or enter &apos;*&apos; to allow all.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaRequest.PushMediaSettings">
            <summary>
            Configuration settings for media upload.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaResponse.Object">
            <summary>
            Direct upload created successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.DirectUploadVideoMediaResponseBody">
            <summary>
            Direct upload created successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DirectUploadVideoMediaResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DisableLiveStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.DisableLiveStreamResponse.LiveStreamDeleteResponse">
            <summary>
            Stream details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.EnableLiveStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.EnableLiveStreamResponse.LiveStreamDeleteResponse">
            <summary>
            Stream details updated successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ErrorCode">
            <summary>
            Pass the error code to filter the list of views. The possible values of error code can be fetched from list of errors end point.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GenerateSubtitleTrackRequest.MediaId">
            <summary>
            A universally unique identifier (UUID) assigned to the media by FastPix.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GenerateSubtitleTrackRequest.TrackId">
            <summary>
            A universally unique identifier (UUID) assigned to the specific track for which subtitles should be generated.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GenerateSubtitleTrackResponse.Object">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GenerateSubtitleTrackResponseBody">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GenerateSubtitleTrackResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GenerateSubtitleTrackResponseBody.Data">
            <summary>
            Represents the response for a successfully generated subtitle track.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetAllPlaylistsRequest.Limit">
            <summary>
            The number of playlists to return (default is 10, max is 50).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetAllPlaylistsRequest.Offset">
            <summary>
            The page number to retrieve, starting from 1. Used for paginating the playlist results.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetAllPlaylistsResponse.GetAllPlaylistsResponseValue">
            <summary>
            Successfully retrieved all playlists
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetAllStreamsRequest.Limit">
            <summary>
            Limit specifies the maximum number of items to display per page.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetAllStreamsRequest.Offset">
            <summary>
            Offset determines the starting point for data retrieval within a paginated list.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetAllStreamsRequest.OrderBy">
            <summary>
            The list of value can be order in two ways DESC (Descending) or ASC (Ascending). In case not specified, by default it will be DESC.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetAllStreamsResponse.GetStreamsResponse">
            <summary>
            All streams retrieved sucessfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterData.ConcurrentViewers">
            <summary>
            Number of concurrent viewers for this dimension value.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterData.DimensionName">
            <summary>
            Name of the dimension (e.g., country, device type, etc.).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterData.MetricValue">
            <summary>
            Additional metric value for this dimension (if applicable).
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterDimension">
            <summary>
            The dimension to group and breakdown the concurrent viewers data by.<br/>
            
            <remarks>
            This determines how the results will be categorized and aggregated.<br/>
            Choose from geographic, content, technical, or behavioral dimensions.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterRequest.Dimension">
            <summary>
            The dimension to group and breakdown the concurrent viewers data by.<br/>
            
            <remarks>
            This determines how the results will be categorized and aggregated.<br/>
            Choose from geographic, content, technical, or behavioral dimensions.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterRequest.Limit">
            <summary>
            Maximum number of results to return. Controls the number of dimension values<br/>
            
            <remarks>
            that will be included in the response. Useful for pagination and performance.<br/>
            Higher limits provide more detailed breakdowns but may impact response time.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterResponse.Object">
            <summary>
            Successfully retrieved concurrent viewers breakdown by the specified dimension.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterResponseBody">
            <summary>
            Successfully retrieved concurrent viewers breakdown by the specified dimension.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterResponseBody.Success">
            <summary>
            Indicates if the request was successful.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterResponseBody.Data">
            <summary>
            Breakdown of concurrent viewers by the specified dimension.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterResponseBody.Timespan">
            <summary>
            Start and end epoch timestamps (milliseconds) for the timespan window.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsData.IntervalTime">
            <summary>
            The timestamp for the interval (ISO 8601 format).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsData.MetricValue">
            <summary>
            Reserved for future metric values (currently null).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsData.NumberOfViews">
            <summary>
            Number of concurrent viewers at the given interval.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsResponse.Object">
            <summary>
            Successfully retrieved concurrent viewers timeseries.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsResponseBody">
            <summary>
            Successfully retrieved concurrent viewers timeseries.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsResponseBody.Success">
            <summary>
            Indicates if the request was successful.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsResponseBody.Data">
            <summary>
            Time series data for concurrent viewers.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDataViewlistCurrentViewsGetTimeseriesViewsResponseBody.Timespan">
            <summary>
            Start and end epoch timestamps (milliseconds) for the timeseries window.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDrmConfigurationByIdRequest.DrmConfigurationId">
            <summary>
            The unique identifier of the DRM configuration.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDrmConfigurationByIdResponse.Object">
            <summary>
            DRM configuration retrieved successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetDrmConfigurationByIdResponseBody">
            <summary>
            DRM configuration retrieved successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDrmConfigurationRequest.Offset">
            <summary>
            Offset determines the starting point for data retrieval within a paginated list.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDrmConfigurationRequest.Limit">
            <summary>
            Limit specifies the maximum number of items to display per page.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDrmConfigurationResponse.Object">
            <summary>
            DRM configuration(s) retrieved successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetDrmConfigurationResponseBody">
            <summary>
            DRM configuration(s) retrieved successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetDrmConfigurationResponseBody.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetLiveStreamByIdRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetLiveStreamByIdResponse.LivestreamgetResponse">
            <summary>
            Stream details retrieved successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetLiveStreamPlaybackIdRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetLiveStreamPlaybackIdRequest.PlaybackId">
            <summary>
            Upon creating a new playbackId, FastPix assigns a unique identifier to the playback.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetLiveStreamPlaybackIdResponse.PlaybackIdSuccessResponse">
            <summary>
            Stream details retrieved successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetLiveStreamViewerCountByIdRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetLiveStreamViewerCountByIdResponse.ViewsCountResponse">
            <summary>
            Stream viewer count retrieved successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaClipsRequest.SourceMediaId">
            <summary>
            The unique identifier of the source media.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaClipsRequest.Offset">
            <summary>
            Offset determines the starting point for data retrieval within a paginated list.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaClipsRequest.Limit">
            <summary>
            The number of media clips to retrieve per request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaClipsRequest.OrderBy">
            <summary>
            The values in the list can be arranged in two ways DESC (Descending) or ASC (Ascending).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaClipsResponse.MediaClipResponse">
            <summary>
            Get media clips
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaRequest.MediaId">
            <summary>
            The Media Id is assigned a universal unique identifier, which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaResponse.Object">
            <summary>
            Get a video media by id
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetMediaResponseBody">
            <summary>
            Get a video media by id
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetMediaResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetPlaybackIdData.Id">
            <summary>
            The unique identifier for the playback ID.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetPlaybackIdData.AccessPolicy">
            <summary>
            Access policy for media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetPlaybackIdResponse.Object">
            <summary>
            Successfully retrieved playback ID details
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetPlaybackIdResponseBody">
            <summary>
            Successfully retrieved playback ID details
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetPlaybackIdResponseBody.Success">
            <summary>
            Indicates if the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetPlaylistByIdRequest.PlaylistId">
            <summary>
            The unique id of the playlist you want to retrieve.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetPlaylistByIdResponse.PlaylistByIdResponse">
            <summary>
            Successfully retrieved all playlists
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetSigningKeyByIdRequest.SigningKeyId">
            <summary>
            When creating the signing key, FastPix assigns a universally unique identifier with a maximum length of 255 characters. 
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetSigningKeyByIdResponse.GetPublicPemUsingSigningKeyIdResponseDTO">
            <summary>
            successfully fetched signing key
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetSpecificSimulcastOfStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetSpecificSimulcastOfStreamRequest.SimulcastId">
            <summary>
            When you create the new simulcast, FastPix assign a universal unique identifier which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetSpecificSimulcastOfStreamResponse.SimulcastResponse">
            <summary>
            Stream&apos;s simulcast details fetched successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetTimeseriesDataMetricId">
            <summary>
            Pass metric Id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataRequest.MetricId">
            <summary>
            Pass metric Id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataRequest.GroupBy">
            <summary>
            Pass this value to group the metrics list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataRequest.SortOrder">
            <summary>
            The order direction to sort the metrics list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataRequest.Measurement">
            <summary>
            The measurement for the given metrics.<br/>
            
            <remarks>
            Possible Values : [95th, median, avg, count or sum]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataResponse.Object">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetTimeseriesDataResponseBody">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataResponseBody.MetaData">
            <summary>
            Retrieves breakdown values for a specified metric and timespan
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetTimeseriesDataResponseBody.Timespan">
            <summary>
            The timeframe from and to details displayed in the form of unix epoch timestamps.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetTimeseriesDataSortOrder">
            <summary>
            The order direction to sort the metrics list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetTimeseriesDataTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetVideoViewDetailsRequest.ViewId">
            <summary>
            Pass View id
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetVideoViewDetailsResponse.Object">
            <summary>
            Get a video view by id
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GetVideoViewDetailsResponseBody">
            <summary>
            Get a video view by id
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetVideoViewDetailsResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.GetVideoViewDetailsResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.GroupBy">
            <summary>
            Pass this value to group the metrics list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.LanguageCode">
            <summary>
            Language codes (BCP 47 compliant) used for text files.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListBreakdownValuesMetricId">
            <summary>
            Pass metric Id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.MetricId">
            <summary>
            Pass metric Id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.Limit">
            <summary>
            Pass the limit to display only the rows specified by the value.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.Offset">
            <summary>
            Pass the offset value to indicate the page number.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.GroupBy">
            <summary>
            Pass this value to group the metrics list by.<br/>
            
            <remarks>
            Possible Values : [&quot;browser_name&quot;, &quot;browser_version&quot;, &quot;os_name&quot;,&quot;os_version&quot; , &quot;device_name&quot;, &quot;device_model&quot;, &quot;device_type&quot;, &quot;device_manufacturer&quot;, &quot;player_remote_played&quot;,player_name&quot;, &quot;player_version&quot;, &quot;player_software_name&quot;, &quot;player_software_version&quot;, &quot;player_resolution&quot;, &quot;fp_sdk&quot;,&quot;fp_sdk_version&quot;, &quot;player_autoplay_on&quot;, &quot;player_preload_on&quot;,&quot;video_title&quot;,  &quot;video_id&quot;, &quot;video_series&quot; ,  &quot;fp_playback_id&quot;,&quot;fp_live_stream_id&quot;, &quot;media_id&quot;,&quot;video_source_stream_type&quot;, &quot;video_source_type&quot;, &quot;video_encoding_variant&quot;, &quot;experiment_name&quot;, &quot;sub_property_id&quot;, &quot;drm_type&quot;,&quot;asn_name&quot;, &quot;cdn&quot;, &quot;video_source_hostname&quot;, &quot;connection_type&quot;, &quot;view_session_id&quot;,&quot;continent&quot;,&quot;country&quot;, &quot;region&quot;,&quot;viewer_id&quot;, &quot;error_code&quot;, &quot;exit_before_video_start&quot;, &quot;view_has_ad&quot;, &quot;video_startup_failed&quot; , &quot;page_context&quot;, &quot;playback_failed&quot;.]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.OrderBy">
            <summary>
            Pass this value to order the metrics list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.SortOrder">
            <summary>
            The order direction to sort the metrics list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesRequest.Measurement">
            <summary>
            The measurement for the given metrics.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesResponse.Object">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListBreakdownValuesResponseBody">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesResponseBody.MetaData">
            <summary>
            Retrieves breakdown values for a specified metric and timespan
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesResponseBody.Data">
            <summary>
            Retrieves breakdown values for a specified metric and timespan
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListBreakdownValuesResponseBody.Timespan">
            <summary>
            The timeframe from and to details displayed in the form of unix epoch timestamps.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListBreakdownValuesSortOrder">
            <summary>
            The order direction to sort the metrics list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListBreakdownValuesTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListByTopContentRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListByTopContentRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListByTopContentRequest.Limit">
            <summary>
            Pass the limit to display only the rows specified by the value.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListByTopContentResponse.Object">
            <summary>
            Get the list of Views
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListByTopContentResponseBody">
            <summary>
            Get the list of Views
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListByTopContentResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListByTopContentResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListByTopContentTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListComparisonValuesDimension">
            <summary>
            The dimension id in which the views are watched.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesRequest.Dimension">
            <summary>
            The dimension id in which the views are watched.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesRequest.Value">
            <summary>
            The value for the selected dimension. <br/>
            
            <remarks>
            For example:<br/>
             If `dimension` is `browser_name`, the value could be  `Chrome` `,` `Firefox` `etc` .<br/>
             If `dimension` is `os_name`, the value could be `macOS` `,` `Windows` `etc` .<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesResponse.Object">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListComparisonValuesResponseBody">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesResponseBody.Data">
            <summary>
            Displays the result of the request.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListComparisonValuesResponseBody.Timespan">
            <summary>
            The timeframe from and to details displayed in the form of unix epoch timestamps.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListComparisonValuesTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListDimensionsResponse.Object">
            <summary>
            Get the list of Views
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListDimensionsResponseBody">
            <summary>
            Get the list of Views
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListDimensionsResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListDimensionsResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListErrorsData">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsData.Errors">
            <summary>
            Retrieves a list of errors that have occurred in the system.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsData.TopErrors">
            <summary>
            Retrieves a list of errors that have occurred most frequently in the system, ranked by their count of occurrences.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsRequest.Limit">
            <summary>
            Pass the limit to display only the rows specified by the value for top errors.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsResponse.Object">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListErrorsResponseBody">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListErrorsResponseBody.Timespan">
            <summary>
            The timeframe from and to details displayed in the form of unix epoch timestamps.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListErrorsTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListFilterValuesForDimensionRequest.DimensionsId">
            <summary>
            Pass Dimensions id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListFilterValuesForDimensionRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListFilterValuesForDimensionRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListFilterValuesForDimensionResponse.Object">
            <summary>
            Get filter / dimension value details by dimension name.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListFilterValuesForDimensionResponseBody">
            <summary>
            Get filter / dimension value details by dimension name.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListFilterValuesForDimensionResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListFilterValuesForDimensionResponseBody.Data">
            <summary>
            filter values associated with a specific dimension
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListFilterValuesForDimensionResponseBody.Timespan">
            <summary>
            The timeframe from and to details displayed in the form of unix epoch timestamps.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListFilterValuesForDimensionTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsRequest.LivestreamId">
            <summary>
            The stream Id is unique identifier assigned to the live stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsRequest.Limit">
            <summary>
            Limit specifies the maximum number of items to display per page.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsRequest.Offset">
            <summary>
            Offset determines the starting point for data retrieval within a paginated list.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsRequest.OrderBy">
            <summary>
            The values in the list can be arranged in two ways: DESC (Descending) or ASC (Ascending).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsResponse.Object">
            <summary>
            List of video media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListLiveClipsResponseBody">
            <summary>
            List of video media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListLiveClipsResponseBody.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListMediaRequest.Limit">
            <summary>
            Limit specifies the maximum number of items to display per page.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListMediaRequest.Offset">
            <summary>
            Offset determines the starting point for data retrieval within a paginated list.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListMediaRequest.OrderBy">
            <summary>
            The values in the list can be arranged in two ways: DESC (Descending) or ASC (Ascending).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListMediaResponse.Object">
            <summary>
            List of video media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListMediaResponseBody">
            <summary>
            List of video media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListMediaResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListMediaResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListMediaResponseBody.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListOverallValuesMetricId">
            <summary>
            Pass metric Id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesRequest.MetricId">
            <summary>
            Pass metric Id<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesRequest.Measurement">
            <summary>
            The measurement for the given metrics.<br/>
            
            <remarks>
            Possible Values : [95th, median, avg, count or sum]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesResponse.Object">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListOverallValuesResponseBody">
            <summary>
            Get filter/ dimension value details by dimension name.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesResponseBody.MetaData">
            <summary>
            Metadata that has to be paased for metric calculations.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesResponseBody.Data">
            <summary>
            Retrieves overall values for a specified metric
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListOverallValuesResponseBody.Timespan">
            <summary>
            The timeframe from and to details displayed in the form of unix epoch timestamps.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListOverallValuesTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListSigningKeysRequest.Limit">
            <summary>
            Limit specifies the maximum number of items to display per page.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListSigningKeysRequest.Offset">
            <summary>
            It is used for pagination, indicating the starting point for fetching data.  
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListSigningKeysResponse.GetAllSigningKeyResponse">
            <summary>
            successfully fetched all signing keys
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListUploadsRequest.Limit">
            <summary>
            Limit specifies the maximum number of items to display per page.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListUploadsRequest.Offset">
            <summary>
            Offset determines the starting point for data retrieval within a paginated list.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListUploadsRequest.OrderBy">
            <summary>
            The values in the list can be arranged in two ways: DESC (Descending) or ASC (Ascending).
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListUploadsResponse.Object">
            <summary>
            List of video media
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListUploadsResponseBody">
            <summary>
            List of video media
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListUploadsResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListUploadsResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListUploadsResponseBody.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.Timespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.Filterby">
            <summary>
            Pass the dimensions and their corresponding values you want to filter the views by. For excluding the values in the filter we can pass &apos;!&apos; before the filter value. The list of filters can be obtained from list of dimensions endpoint.<br/>
            
            <remarks>
            Example Values : [ browser_name:Chrome , os_name:macOS , device_name:Galaxy ]<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.Limit">
            <summary>
            Pass the limit to display only the rows specified by the value.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.Offset">
            <summary>
            Pass the offset value to indicate the page number.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.ViewerId">
            <summary>
            Pass the viewer_id to filter the list of views. This value can be manually set during integration or generated by FastPix. When set manually it can be a string of aplha numeric values of any length.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.ErrorCode">
            <summary>
            Pass the error code to filter the list of views. The possible values of error code can be fetched from list of errors end point.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.OrderBy">
            <summary>
            Pass this value to sort the view list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsRequest.SortOrder">
            <summary>
            The order direction to sort the view list by.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsResponse.Object">
            <summary>
            Get the list of Views
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListVideoViewsResponseBody">
            <summary>
            Get the list of Views
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsResponseBody.Success">
            <summary>
            It demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsResponseBody.Pagination">
            <summary>
            Pagination organizes content into pages for better readability and navigation.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.ListVideoViewsResponseBody.Timespan">
            <summary>
            The timeframe from and to details displayed in the form of unix epoch timestamps.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.ListVideoViewsTimespan">
            <summary>
            This parameter specifies the time span between which the video views list should be retrieved by. You can provide either from and to unix epoch timestamps or time duration. The scope of duration is between 60 minutes to 30 days.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.MaxResolution">
            <summary>
            Determines the highest quality resolution available.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.OrderBy">
            <summary>
            The list of value can be order in two ways DESC (Descending) or ASC (Ascending). In case not specified, by default it will be DESC.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.PushMediaSettings">
            <summary>
            Configuration settings for media upload.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.AccessPolicy">
            <summary>
            Basic access policy for media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.StartTime">
            <summary>
            Start time indicates where encoding should begin within the video file, in seconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.EndTime">
            <summary>
            End time indicates where encoding should end within the video file, in seconds.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.Metadata">
            <summary>
            Tag a video in &quot;key&quot; : &quot;value&quot; pairs for searchable metadata. Maximum 10 entries, 255 characters each.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.Subtitles">
            <summary>
            Generates subtitle files for audio/video files.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.OptimizeAudio">
            <summary>
            Enhance the quality and volume of the audio track. This is available for pre-recorded content only.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.MaxResolution">
            <summary>
            Determines the highest quality resolution available.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.SourceAccess">
            <summary>
            The sourceAccess parameter determines whether the original media file is accessible. Set to true to enable access or false to restrict it
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.Mp4Support">
            <summary>
            Generates MP4 video up to 4K (&quot;capped_4k&quot;), m4a audio only (&quot;audioOnly&quot;), or both for offline viewing.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.Chapters">
            <summary>
            Enable or disable the chapters feature for the media. Set to `true` to enable chapters or `false` to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.PushMediaSettings.NamedEntities">
            <summary>
            Enable or disable named entity extraction. Set to `true` to enable or `false` to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.Resolution">
            <summary>
            The maximum resolution for the playback ID.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.RetrieveMediaInputInfoData">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.RetrieveMediaInputInfoRequest.MediaId">
            <summary>
            Pass the list of the input objects used to create the media, along with applied settings.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.RetrieveMediaInputInfoResponse.Object">
            <summary>
            Get video media input information
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.RetrieveMediaInputInfoResponseBody">
            <summary>
            Get video media input information
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.RetrieveMediaInputInfoResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.RetrieveMediaInputInfoResponseBody.Data">
            <summary>
            Displays the result of the request.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.Subtitles">
            <summary>
            Generates subtitle files for audio/video files.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.Subtitles.LanguageName">
            <summary>
            Name of the language for the subtitles.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.Subtitles.Metadata">
            <summary>
            Tag a video in &quot;key&quot; : &quot;value&quot; pairs for searchable metadata. Maximum 10 entries, 255 characters each.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.Subtitles.LanguageCode">
            <summary>
            Language codes (BCP 47 compliant) used for text files.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.Summary.Generate">
            <summary>
            Enable or disable the summary feature for the media. Set to true to enable summary or false to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.Summary.SummaryLength">
            <summary>
            Specifies the desired word count for the generated summary. <br/>
            
            <remarks>
            - The value must be between **30** and **250** words.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateAPlaylistRequest.PlaylistId">
            <summary>
            The unique id of the playlist you want to retrieve.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateAPlaylistResponse.PlaylistCreatedResponse">
            <summary>
            Playlist updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedMediaRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedMediaResponse.Object">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdatedMediaResponseBody">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedMediaResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdatedMp4SupportMp4Support">
            <summary>
            Determines the type of MP4 support for the media.   - **none**: Disables MP4 support.   - **capped_4k**: Enables MP4 downloads with resolutions up to 4K.   - **audioOnly**: Provides an MP4 stream containing only the audio.   - **audioOnly,capped_4k**: Enables both MP4 video downloads (up to 4K) and an audio-only stream.  
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedMp4SupportRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedMp4SupportRequestBody.Mp4Support">
            <summary>
            Determines the type of MP4 support for the media.   - **none**: Disables MP4 support.   - **capped_4k**: Enables MP4 downloads with resolutions up to 4K.   - **audioOnly**: Provides an MP4 stream containing only the audio.   - **audioOnly,capped_4k**: Enables both MP4 video downloads (up to 4K) and an audio-only stream.  
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedMp4SupportResponse.Object">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdatedMp4SupportResponseBody">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedMp4SupportResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedSourceAccessRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedSourceAccessRequestBody.SourceAccess">
            <summary>
            The sourceAccess parameter determines whether the original media file is accessible. Set to true to enable access or false to restrict it.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedSourceAccessResponse.Object">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdatedSourceAccessResponseBody">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdatedSourceAccessResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateLiveStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateLiveStreamResponse.PatchResponseDTO">
            <summary>
            Stream details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaChaptersRequest.MediaId">
            <summary>
            The unique identifier assigned to the media when created. The value should be a valid UUID.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaChaptersRequestBody.Chapters">
            <summary>
            Enable or disable the chapters feature for the media. Set to `true` to enable chapters or `false` to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaChaptersResponse.Object">
            <summary>
            Media details updated successfully with the chapters feature enabled or disabled
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdateMediaChaptersResponseBody">
            <summary>
            Media details updated successfully with the chapters feature enabled or disabled
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaChaptersResponseBody.Success">
            <summary>
            Indicates if the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaModerationModeration.Type">
            <summary>
            Type of media content
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaModerationRequest.MediaId">
            <summary>
            The unique identifier assigned to the media when created. The value should be a valid UUID.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaModerationResponse.Object">
            <summary>
            Media details updated successfully with the named entity extraction feature enabled or disabled
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdateMediaModerationResponseBody">
            <summary>
            Media details updated successfully with the named entity extraction feature enabled or disabled
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaModerationResponseBody.Success">
            <summary>
            Indicates if the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaNamedEntitiesRequest.MediaId">
            <summary>
            The unique identifier assigned to the media when created. The value should be a valid UUID.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaNamedEntitiesRequestBody.NamedEntities">
            <summary>
            Enable or disable named entity extraction. Set to `true` to enable or `false` to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaNamedEntitiesResponse.Object">
            <summary>
            Media details updated successfully with the named entity extraction feature enabled or disabled
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdateMediaNamedEntitiesResponseBody">
            <summary>
            Media details updated successfully with the named entity extraction feature enabled or disabled
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaNamedEntitiesResponseBody.Success">
            <summary>
            Indicates if the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaSummaryRequest.MediaId">
            <summary>
            The unique identifier assigned to the media when created. The value should be a valid UUID.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaSummaryRequestBody.Generate">
            <summary>
            Enable or disable the summary feature for the media. Set to true to enable summary or false to disable.<br/>
            
            <remarks>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaSummaryRequestBody.SummaryLength">
            <summary>
            Specifies the desired word count for the generated summary. <br/>
            
            <remarks>
            - The value must be between **30** and **250** words.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaSummaryResponse.Object">
            <summary>
            Media details updated successfully with the generated summary
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdateMediaSummaryResponseBody">
            <summary>
            Media details updated successfully with the generated summary
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaSummaryResponseBody.Success">
            <summary>
            Indicates if the request was successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaTrackRequest.TrackId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaTrackRequest.MediaId">
            <summary>
            When creating the media, FastPix assigns a universally unique identifier with a maximum length of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaTrackResponse.Object">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="T:Fastpix.Models.Requests.UpdateMediaTrackResponseBody">
            <summary>
            Media details updated successfully
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaTrackResponseBody.Success">
            <summary>
            Demonstrates whether the request is successful or not.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateMediaTrackResponseBody.Data">
            <summary>
            Contains details about the track that was added or updated.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateSpecificSimulcastOfStreamRequest.StreamId">
            <summary>
            Upon creating a new live stream, FastPix assigns a unique identifier to the stream.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateSpecificSimulcastOfStreamRequest.SimulcastId">
            <summary>
            When you create the new simulcast, FastPix assign a universal unique identifier which can contain a maximum of 255 characters.
            </summary>
        </member>
        <member name="P:Fastpix.Models.Requests.UpdateSpecificSimulcastOfStreamResponse.SimulcastUpdateResponse">
            <summary>
            Stream&apos;s simulcast details fetched successfully
            </summary>
        </member>
        <member name="M:Fastpix.IPlayback.CreateAsync(System.String,Fastpix.Models.Requests.CreateMediaPlaybackIdRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a playback ID
            
            <remarks>
            You can create a new playback ID for a specific media asset. If you have already retrieved an existing `playbackId` using the &lt;a href=&quot;https://docs.fastpix.io/reference/get-media&quot;&gt;Get Media by ID&lt;/a&gt; endpoint for a media asset, you can use this endpoint to generate a new playback ID with a specified access policy. <br/>
            <br/>
            <br/>
            <br/>
            If you want to create a private playback ID for a media asset that already has a public playback ID, this endpoint also allows you to do so by specifying the desired access policy. <br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Make a `POST` request to this endpoint, replacing `&lt;mediaId&gt;` with the `uploadId` or `id` of the media asset. <br/>
            <br/>
            2. Include the `accessPolicy` in the request body with `private` or `public` as the value. <br/>
            <br/>
            3. Receive a response containing the newly created playback ID with the requested access level. <br/>
            <br/>
            <br/>
            #### Example<br/>
            A video streaming service generates playback IDs for each media file when users request to view specific content. The playback ID is then used by the video player to stream the video.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlayback.DeleteAsync(System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete a playback ID
            
            <remarks>
            This endpoint allows you to remove a specific playback ID associated with a media asset. Deleting a `playbackId` will revoke access to the media content linked to that ID. <br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Make a `DELETE` request to this endpoint, replacing `&lt;mediaId&gt;` with the unique ID of the media asset from which you want to delete the playback ID. <br/>
            <br/>
            2. Specify the `playbackId` you wish to delete in the request body. <br/>
            <br/>
            #### Example<br/>
            <br/>
            Your platform offers limited-time access to premium content. When the subscription expires, you can revoke access to the content by deleting the associated playback ID, preventing users from streaming the video further.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlayback.GetByIdAsync(System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get a playback ID
            
            <remarks>
            This endpoint retrieves details about a specific playback ID associated with a media asset. This endpoint is commonly used to check the access policy (e.g., public or private) with the specific playback ID.<br/>
            <br/>
            **How it works:**<br/>
            1. Make a GET request to the endpoint, replacing `{mediaId}` with the `id` of the media, and `{playbackId}` with the specific playback ID.<br/>
            2. Useful for auditing or validation before granting playback access in your application.<br/>
            <br/>
            **Example:**<br/>
            A media platform might use this endpoint to verify if a playback ID is public or private before embedding the video in a frontend player or allowing access to a restricted group.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylist.GetByIdAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get a playlist by ID
            
            <remarks>
            This endpoint retrieves detailed information about a specific playlist using its unique `playlistId`. It provides comprehensive metadata about the playlist, including its title, creation mode (manual or smart), media items along with the metadata of each media in the playlist.<br/>
            <br/>
             <br/>
            #### Example<br/>
            An e-learning platform requests details for the playlist &quot;Beginner Python Series&quot; by providing its unique `playlistId`. The response includes the playlist&apos;s title, creation mode, and the ordered list of video tutorials contained within, enabling the platform to present the full learning path to users.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylist.UpdateAsync(System.String,Fastpix.Models.Components.UpdatePlaylistRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update a playlist by ID
            
            <remarks>
            This endpoint allows you to update the name and description of an existing playlist. It enables modifications to the playlist&apos;s metadata without altering the media items or playlist structure.<br/>
            #### How it works<br/>
            <br/>
             - When a user sends a PUT request to this endpoint with the `playlistId` and updated name and description in the request body, FastPix updates the playlist metadata accordingly and returns the updated playlist details.<br/>
            <br/>
            #### Example<br/>
            An e-learning platform updates the playlist titled &quot;Beginner Python Series&quot; to rename it as &quot;Python Basics&quot; and add a more detailed description. The updated metadata is reflected when retrieving the playlist, helping users better understand the playlist content.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylists.CreateAsync(Fastpix.Models.Components.CreatePlaylistRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a new playlist
            
            <remarks>
            This endpoint creates a new playlist within a specified workspace. A playlist acts as a container for organizing media items either manually or based on filters and metadata. &lt;br&gt; &lt;br&gt;<br/>
            ### Playlists can be created in two modes<br/>
            - **Manual:** An empty playlist is created without any initial media items. It&apos;s intended for manual curation, where items can be added later in a user-defined sequence.<br/>
            - **Smart:** The playlist is auto-populated at creation time based on filters (video creation date range) criteria provided in the request.<br/>
            <br/>
            #### How it works <br/>
            <br/>
             - When a user sends a POST request to this endpoint, FastPix creates a playlist and returns a playlist ID, using which items can be added later in a user-defined sequence.<br/>
             - For a smart playlist, the playlist will be auto-populated based on metadata in the request body.<br/>
            <br/>
            <br/>
            #### Example<br/>
            An e-learning platform creates a new playlist titled &quot;Beginner Python Series&quot; via the API. The response includes a unique playlist ID. The platform then uses this ID to add a series of video tutorials to the playlist in a defined order. The playlist is presented to learners on the frontend as a structured learning path.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylists.ListAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get all playlists
            
            <remarks>
            This endpoint retrieves all playlists present within a specified workspace. It allows users to view the collection of playlists that have been created, whether manual or smart, along with their associated metadata.<br/>
            #### How it works<br/>
            <br/>
             - When a user sends a GET request to this endpoint, FastPix returns a list of all playlists in the workspace, including details such as playlist IDs, titles, creation mode (manual or smart), and other relevant metadata.<br/>
             <br/>
            #### Example<br/>
            <br/>
              An e-learning platform requests all playlists within a workspace to display an overview of available learning paths. The response includes multiple playlists like &quot;Beginner Python Series&quot; and &quot;Advanced Java Tutorials,&quot; enabling the platform to show users a catalog of curated content collections.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylists.DeleteAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete a playlist by ID
            
            <remarks>
            This endpoint allows you to delete an existing playlist from the workspace. Once deleted, the playlist and its metadata are permanently removed and cannot be recovered.<br/>
            #### How it works<br/>
             - When a user sends a DELETE request to this endpoint with the `playlistId`, FastPix removes the specified playlist from the workspace and returns a confirmation of successful deletion.<br/>
             <br/>
            #### Example<br/>
            An e-learning platform deletes an outdated playlist titled &quot;Old Python Tutorials&quot; by providing its unique playlist ID. The platform receives confirmation that the playlist has been removed, ensuring learners no longer see the obsolete content.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylists.AddMediaAsync(System.String,Fastpix.Models.Components.MediaIdsRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Add media to a playlist by ID
            
            <remarks>
            This endpoint allows you to add one or more media items to an existing playlist. By passing the media ID(s) in the request, the specified media items are appended to the playlist in the order provided.<br/>
            #### How it works<br/>
            <br/>
             - When a user sends a PATCH request to this endpoint with the `playlistId` as path parameter and a list of media ID(s) in the request body, FastPix adds the specified media items to the playlist and returns the updated playlist details.<br/>
             <br/>
            #### Example<br/>
            An e-learning platform adds new video tutorials to the &quot;Beginner Python Series&quot; playlist by sending their media IDs in the request. The playlist is updated with the new content, ensuring learners have access to the latest tutorials in sequence.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylists.ChangeMediaOrderAsync(System.String,Fastpix.Models.Components.MediaIdsRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Change media order in a playlist by ID
            
            <remarks>
            This endpoint allows you to change the order of media items within a playlist. By passing the complete list of media IDs in the desired sequence, the playlist&apos;s play order is updated accordingly.<br/>
            #### How it works<br/>
            <br/>
             - When a user sends a PUT request to this endpoint with the `playlistId` as path parameter and the reordered list of all media IDs in the request body, FastPix updates the playlist to reflect the new media sequence and returns the updated playlist details.<br/>
             <br/>
            #### Example<br/>
            An e-learning platform rearranges the &quot;Beginner Python Series&quot; playlist by submitting a reordered list of media IDs. The playlist now follows the new sequence, providing learners with a better structured learning path.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IPlaylists.DeleteMediaAsync(System.String,Fastpix.Models.Components.MediaIdsRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete media in a playlist by ID
            
            <remarks>
            This endpoint allows you to delete one or more media items from an existing playlist. By passing the media ID(s) in the request, the specified media items are removed from the playlist.<br/>
            #### How it works<br/>
            <br/>
             - When a user sends a DELETE request to this endpoint with the playlist ID as the path parameter and the media ID(s) to be removed in the request body, FastPix deletes the specified media items from the playlist and returns the updated playlist details.<br/>
             <br/>
            #### Example<br/>
            An e-learning platform removes outdated video tutorials from the &quot;Beginner Python Series&quot; playlist by specifying their media IDs in the request. The playlist is updated to exclude these items, ensuring learners only access relevant content.
            </remarks>
            </summary>
        </member>
        <member name="F:Fastpix.SDKConfig.ServerList">
            <summary>
            List of server URLs available to the SDK.
            </summary>
        </member>
        <member name="M:Fastpix.SDKConfig.#ctor(Fastpix.Utils.IFastPixHttpClient)">
            <summary>
            Initializes a new instance of the SDKConfig struct with default values.
            </summary>
        </member>
        <member name="M:Fastpix.ISigningKeys.CreateAsync(Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a signing key
            
            <remarks>
            This endpoint allows you to create a new signing key pair for FastPix. When you call this endpoint, the API generates a 2048-bit RSA key pair. The privateKey will be returned in the response, encoded in Base64 format, and you will receive a unique key id to reference the key in future operations. FastPix will securely store the public key to validate signed tokens. <br/>
            <br/>
            <br/>
            &lt;h4&gt;Instructions&lt;/h4&gt; <br/>
            <br/>
            <br/>
            **Private key handling:** The privateKey you receive is encoded in Base64. To use it, you&apos;ll need to decode it using Base64 decoding. Make sure to store this private key securely, as it is required for signing tokens. <br/>
            <br/>
            <br/>
            **Key-ID:** The id will be used to reference this specific key pair in future API requests or configurations. <br/>
            <br/>
            <br/>
            Once the key pair is generated, the private key must be securely stored by the developer, as FastPix will not save it. The public key will be used by FastPix to verify any signed tokens, ensuring that the client interacting with the system is legitimate. <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            &lt;h4&gt;Use case scenario&lt;/h4&gt; <br/>
            <br/>
            <br/>
            <br/>
            **Use case:** A developer building a video subscription service wants to ensure that only authorized users can access premium content. By generating a signing key, the developer can issue signed JSON Web Tokens (JWTs) to authenticate and authorize users. These tokens can be validated by FastPix using the stored public key. <br/>
            <br/>
            <br/>
            **Detailed example:**  Imagine a scenario where you&apos;re building a video-on-demand platform that restricts access based on user subscriptions. To ensure only subscribed users can stream content, you generate a signing key using this API. Each time a user logs in, you create a JWT signed with the private key. When the user attempts to play a video, FastPix uses the public key to verify the token and confirms that the user is authorized.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ISigningKeys.ListAsync(System.Nullable{System.Double},System.Nullable{System.Double},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get list of signing key
            
            <remarks>
            This endpoint returns a list of all the signing keys associated with an organization in FastPix. Each key entry in the response includes metadata such as the key id, creation date, and workspace details. This helps you manage multiple keys, track their usage, and identify which keys are valid for signing API requests. <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            &lt;h4&gt;How it works&lt;/h4&gt; <br/>
            <br/>
            <br/>
            The API returns the list in a paginated format, allowing you to audit and track all keys used for your application. Regularly reviewing this list is essential for ensuring that old or compromised keys are promptly revoked and that new keys are properly integrated into workflows. <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            &lt;h4&gt;Use case scenario&lt;/h4&gt; <br/>
            <br/>
            <br/>
            <br/>
            **Use case:** A security-conscious development team wants to ensure they follow a key rotation policy, rotating signing keys every few months. By retrieving the list of signing keys, they can identify which keys are still in use and which ones need to be rotated. <br/>
            <br/>
            <br/>
            **Detailed example:**  You&apos;re managing a multi-region video platform where different teams in different regions have created their own signing keys. To ensure compliance with your organization&apos;s security policies, you regularly review the list of signing keys to verify which ones are still active. You find a few keys that haven’t been used in months, and based on the creation date, you decide to rotate them.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ISigningKeys.DeleteAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete a signing key
            
            <remarks>
            This endpoint allows you to delete an existing signing key, and the action is permanent. Once a key is deleted, any signatures or tokens generated using that key will immediately become invalid. This means you can no longer use the key to sign JSON Web Tokens (JWTs) or authenticate API requests. <br/>
            &lt;h4&gt;Usage&lt;/h4&gt; <br/>
            To delete a signing key, you will need to provide the unique key id that was obtained when creating the signing key. This key id serves as the identifier for the specific signing key you want to remove from your account. <br/>
            <br/>
            <br/>
            <br/>
            &lt;h4&gt;How it works&lt;/h4&gt; <br/>
            <br/>
            By specifying the key id, the API removes the signing key from the system. After the key is deleted, any API requests or tokens that rely on it will fail. This action is useful when a key is compromised or when rotating keys as part of security policies. <br/>
            <br/>
            <br/>
            <br/>
            &lt;h4&gt;Use case scenario&lt;/h4&gt; <br/>
            <br/>
            <br/>
            **Use case:** A key used by an outdated application version has been compromised, or a developer accidentally leaked it. To prevent unauthorized access, the developer deletes the signing key, revoking its ability to sign requests immediately. <br/>
            <br/>
            <br/>
            **Detailed example:**  Let’s say you have a signing key used for a specific version of your mobile app, and you discover that this key has been compromised due to a security breach. To mitigate the issue, you delete the key to invalidate any tokens generated using it. As soon as the key is deleted, users on the compromised version of the app can no longer make valid requests, thus preventing further exploitation.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ISigningKeys.GetByIdAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get signing key by ID
            
            <remarks>
            This endpoint allows you to retrieve detailed information about a specific signing key using its unique key id. While the private key is not returned for security reasons, you&apos;ll be able to see the key&apos;s creation date, status, and other associated metadata. This endpoint also returns the workspaceId and publicKey in the response. <br/>
            <br/>
            <br/>
            &lt;h4&gt;Usage: Generating a JWT token&lt;/h4&gt; <br/>
            <br/>
            In the response, you will receive the workspaceId and publicKey associated with the signing key. With the publicKey and the privateKey obtained from the &quot;Create a Signing Key&quot; endpoint, you can generate a JSON Web Token (JWT) using the RS256 algorithm. This token can be utilized for accessing private media assets, GIFs, thumbnails, and spritesheets. <br/>
            <br/>
            <br/>
            <br/>
            &lt;h4&gt;Payload:&lt;/h4&gt; <br/>
            <br/>
            <br/>
            ```<br/>
            { <br/>
              &quot;kid&quot;: &quot;359302ee-2446-4afe-9348-8b4656b9ddb1&quot;, <br/>
              &quot;aud&quot;: &quot;media:6cee6f85-9334-4a51-9ce3-e0241d94ceef&quot;, <br/>
              &quot;iss&quot;: &quot;fastpix.io&quot;, <br/>
              &quot;sub&quot;: &quot;&quot;, <br/>
              &quot;iat&quot;: 1706703204, <br/>
              &quot;exp&quot;: 1735626783 <br/>
            <br/>
            } <br/>
            ```<br/>
            <br/>
            <br/>
            <br/>
            * **kid:** The key ID of the signing key. <br/>
            * **aud:** The audience for which the token is intended. <br/>
            * **iss:** The issuer of the token (e.g., &quot;fastpix.io&quot;). <br/>
            * **sub:** The subject of the token, typically representing the user or entity the token is issued for. In this case, use the workspaceId fetched from the &quot;Get Signing Key by ID&quot; endpoint. <br/>
            * **groups:** An array of groups the subject belongs to (e.g., [&quot;user&quot;]). <br/>
            * **iat:** The issued-at timestamp, indicating when the token was created. <br/>
            * **exp:** The expiration timestamp, indicating when the token will no longer be valid. <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            &lt;h4&gt;Use case scenario&lt;/h4&gt; <br/>
            <br/>
            <br/>
            <br/>
            **Use case:** A developer is unsure about the status of a signing key they created months ago and wants to verify whether it&apos;s still in use or has expired. <br/>
            <br/>
            <br/>
            <br/>
            **Detailed example:**  You’re working on a streaming platform and realize you haven’t checked the status of a signing key that was used for playback access several months ago. By fetching the key details using its ID, you can confirm whether it’s still active, when it was created, and if it’s nearing expiration. This allows you to plan a rotation or deactivation if needed.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ISimulcasts.DeleteAsync(System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete a simulcast
            
            <remarks>
            Allows you to delete a simulcast using its unique `simulcastId`, which was returned during the simulcast creation process. Deleting a simulcast stops the broadcast to the associated platform, but the parent stream will continue to run if it is live. This action is irreversible, and a new simulcast would need to be created if you want to resume streaming to the same platform. <br/>
            <br/>
            Webhook event: &lt;a href=&quot;https://docs.fastpix.io/docs/live-events#videolive_streamsimulcast_targetdeleted&quot;&gt;video.live_stream.simulcast_target.deleted&lt;/a&gt;<br/>
            <br/>
            <br/>
            #### Example<br/>
            A broadcaster needs to stop simulcasting to one platform due to technical difficulties while keeping the stream active on others. For instance, a tech company is simulcasting a product launch on multiple platforms. Midway through the event, they decide to stop the simulcast on Facebook due to performance issues, but keep it running on YouTube. They call this API to delete the Facebook simulcast target.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ISimulcastStream.CreateAsync(System.String,Fastpix.Models.Components.SimulcastRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create a simulcast
            
            <remarks>
            Lets you to create a simulcast for a parent live stream. Simulcasting enables you to broadcast the live stream to multiple social platforms simultaneously (e.g., YouTube, Facebook, or Twitch). This feature is useful for expanding your audience reach across different platforms. However, a simulcast can only be created when the parent live stream is in idle state (i.e., not currently live or disabled). Additionally, only one simulcast target can be created per API call. <br/>
            #### How it works<br/>
            <br/>
            1. Upon calling this endpoint, you need to provide the parent `streamId` and the details of the simulcast target (platform and credentials). The system will generate a unique `simulcastId`, which can be used to manage the simulcast later. <br/>
            <br/>
            2. To notify your application about the status of simulcast related events check for the &lt;a href=&quot;https://docs.fastpix.io/docs/webhooks-collection#simulcast-target-events&quot;&gt;webhooks for simulcast&lt;/a&gt; target events. <br/>
            <br/>
            #### Example<br/>
            An event manager sets up a live stream for a virtual conference and wants to simulcast the stream on YouTube and Facebook Live. They first create the primary live stream in FastPix, ensuring it&apos;s in the idle state. Then, they use the API to create a simulcast target for YouTube. <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/simulcast-to-3rd-party-platforms&quot;&gt;Simulcast to 3rd party platforms&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ISimulcastStreams.GetSpecificAsync(System.String,System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get a specific simulcast
            
            <remarks>
            Retrieves the details of a specific simulcast associated with a parent live stream. By providing both the `streamId` of the parent stream and the `simulcastId`, FastPix returns detailed information about the simulcast, such as the stream URL, the status of the simulcast, and metadata. <br/>
            <br/>
            #### Example<br/>
            This endpoint can be used to verify the status of the simulcast on external platforms before the live stream begins. For instance, before starting a live gaming event, the organizer wants to ensure that the simulcast to Twitch is set up correctly. They retrieve the simulcast information to confirm that everything is properly configured.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.ISimulcastStreams.UpdateAsync(System.String,System.String,Fastpix.Models.Components.SimulcastUpdateRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update a simulcast
            
            <remarks>
            Allows you to enable or disable a specific simulcast associated with a parent live stream. The status of the simulcast can be updated at any point, whether the live stream is active or idle. However, once the live stream is disabled, the simulcast can no longer be modified. <br/>
            <br/>
            Webhook event: &lt;a href=&quot;https://docs.fastpix.io/docs/live-events#videolive_streamsimulcast_targetupdated&quot;&gt;video.live_stream.simulcast_target.updated&lt;/a&gt;<br/>
            <br/>
            #### Example<br/>
            When a `PATCH` request is made to this endpoint, the API updates the status of the simulcast. This can be useful for pausing or resuming a simulcast on a particular platform without stopping the parent live stream.
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IStreams.GetByIdAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get stream by ID
            
            <remarks>
            This endpoint retrieves details about a specific live stream by its unique `streamId`. It includes data such as the stream’s `status` (idle, preparing, active, disabled), `metadata` (title, description), and more. <br/>
            #### Example<br/>
            <br/>
              Suppose a news agency is broadcasting a live event and wants to track the configurations set for the live stream while also checking the stream&apos;s status.<br/>
            <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/manage-streams&quot;&gt;Manage streams&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IStreams.DeleteAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Delete a stream
            
            <remarks>
            Permanently removes a specified live stream from the workspace. If the stream is still active, the encoder will be disconnected, and the ingestion will stop. This action cannot be undone, and any future playback attempts will fail. <br/>
            <br/>
              By providing the `streamId`, the API will terminate any active connections to the stream and remove it from the list of available live streams. You can further look for &lt;a href=&quot;https://docs.fastpix.io/docs/live-events#videolive_streamdeleted&quot;&gt;video.live_stream.deleted&lt;/a&gt; webhook to notify your system about the status. <br/>
            <br/>
              #### Example<br/>
            <br/>
              For an online concert platform, a trial stream was mistakenly made public. The event manager deletes the stream before the concert begins to avoid confusion among viewers. <br/>
            <br/>
            <br/>
              Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/manage-streams&quot;&gt;Manage streams&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IStreams.UpdateAsync(System.String,Fastpix.Models.Components.PatchLiveStreamRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update a stream
            
            <remarks>
            This endpoint allows you to modify the parameters of an existing live stream, such as its `metadata` (title, description) or the `reconnectWindow`. It’s useful for making changes to a stream that has already been created but not yet ended. Once the live stream is disabled, you cannot update a stream. <br/>
            <br/>
            <br/>
              The updated stream parameters and the `streamId` needs to be shared in the request, and FastPix will return the updated stream details. Once updated, &lt;a href=&quot;https://docs.fastpix.io/docs/live-events#videolive_streamupdated&quot;&gt;video.live_stream.updated&lt;/a&gt; webhook event notifies your system. <br/>
            <br/>
             #### Example<br/>
            <br/>
             A host realizes they need to extend the reconnect window for their live stream in case they lose connection temporarily during the event. Or suppose during a multi-day online conference, the event organizers need to update the stream title to reflect the next day&apos;s session while keeping the same stream ID for continuity. <br/>
            <br/>
            <br/>
            <br/>
              Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/manage-streams&quot;&gt;Manage streams&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IStreams.EnableAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Enable a stream
            
            <remarks>
            This endpoint allows you to enable a livestream by transitioning its status from `disabled` to `idle`. Once enabled, the stream becomes available and ready to accept an incoming broadcast from a streaming tool.<br/>
            <br/>
            Streams on the trial plan cannot be re-enabled if they are in the `disabled` state.<br/>
            <br/>
            The `livestreamId` must be provided in the path, and the stream must not already be in an enabled state (`idle`, `preparing`, or `active`).<br/>
            <br/>
            #### Example<br/>
            <br/>
            A creator disables a livestream to pause it temporarily. Later, they decide to continue the session. By calling this endpoint with the stream&apos;s ID, they can re-enable and restart the same livestream.<br/>
            <br/>
            Related guide &lt;a href=&quot;https://docs.fastpix.io/docs/manage-streams&quot;&gt;Manage streams&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IUploads.ListAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.Nullable{Fastpix.Models.Components.SortOrder},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get all unused upload URLs
            
            <remarks>
            This endpoint retrieves a paginated list of all unused upload signed URLs within your organization. It provides comprehensive metadata including upload IDs, creation dates, status, and URLs, helping you manage your media resources efficiently.<br/>
            <br/>
            An unused upload URL is a signed URL that gets generated when an user initiates upload but never completed the upload process. This can happen due to reasons like network issues, manual cancellation of upload, browser/app crashes or session timeouts.These URLs remain in the system as &quot;unused&quot; since they were created but never resulted in a successful media file upload.<br/>
            <br/>
            #### How it works<br/>
            <br/>
             - The endpoint returns metadata for all unused upload URLs in your organization&apos;s library.<br/>
             - Results are paginated to manage large datasets effectively.<br/>
             - Signed URLs expire after 24 hours from creation.<br/>
             - Each entry includes full metadata about the unused upload.<br/>
            <br/>
            <br/>
            <br/>
            #### Example<br/>
            <br/>
            A video management team for a media organization regularly uploads content to their system but often forgets to delete or utilize unused uploads. These unused uploads, which have signed URLs that expire after 24 hours, need to be managed efficiently. By using this API, they can retrieve metadata for all unused uploads, identify expired signed URLs, and decide whether to regenerate URLs, reuse the uploads, or delete them.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.Utils.IFastPixHttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends an HTTP request asynchronously.
            </summary>
            <remarks>
            When overriding this method, use HttpCompletionOption.ResponseHeadersRead to support streaming response bodies.
            </remarks>
            <param name="request">The HTTP request message to send.</param>
            <param name="cancellationToken">Optional cancellation token to cancel the request.</param>
            <returns>The value of the TResult parameter contains the HTTP response message.</returns>
        </member>
        <member name="M:Fastpix.Utils.IFastPixHttpClient.CloneAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Clones an HTTP request asynchronously.
            </summary>
            <remarks>
            This method is used in the context of Retries. It creates a new HttpRequestMessage instance
            as a deep copy of the original request, including its method, URI, content, headers and options.
            </remarks>
            <param name="request">The HTTP request message to clone.</param>
            <returns>The value of the TResult parameter contains the cloned HTTP request message.</returns>
        </member>
        <member name="M:Fastpix.Utils.Retries.BackoffStrategy.#ctor(System.Int64,System.Int64,System.Int64,System.Double,System.Double)">
            <summary>
            Configures the exponential backoff strategy.
            </summary>
            <remarks>
            The duration between consecutive attempts is calculated as follows:
                intervalMs = min(maxIntervalMs, initialIntervalMs*(baseFactor^attempts) +/- r)
            where baseFactor (also referred to as "exponent") is the multiplicative factor
            and r a random value between 0 and jitterFactor*intervalMs.
            </remarks>
            <param name="initialIntervalMs">The initial interval in milliseconds.</param>
            <param name="maxIntervalMs">The maximum interval in milliseconds.</param>
            <param name="maxElapsedTimeMs">The maximum elapsed time in milliseconds.</param>
            <param name="exponent">The base factor used to compute the exponential interval</param>
            <param name="jitterFactor">The jitter factor used to randomize the backoff interval</param>
        </member>
        <member name="M:Fastpix.Utils.Retries.RetryConfig.#ctor(Fastpix.Utils.Retries.RetryConfig.RetryStrategy,Fastpix.Utils.Retries.BackoffStrategy,System.Boolean)">
            <summary>
            Selects the retry strategy.
            </summary>
            <param name="strategy">The retry strategy.</param>
            <param name="backoff">The backoff strategy configuration (if applicable)</param>
            <param name="retryConnectionErrors">Whether to retry on connection errors.</param>
            <remarks>
            The backoff strategy is only required if the retry strategy is set to BACKOFF.
            To disable retries, set the strategy to NONE.
            </remarks>
        </member>
        <member name="M:Fastpix.IVideos.CreateFromUrlAsync(Fastpix.Models.Components.CreateMediaRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Create media from URL
            
            <remarks>
            This endpoint allows developers or users to create a new video or audio media in FastPix using a publicly accessible URL. FastPix will fetch the media from the provided URL, process it, and store it on the platform for use. <br/>
            <br/>
            <br/>
            <br/>
            #### Public URL requirement:<br/>
            <br/>
            <br/>
              The provided URL must be publicly accessible and should point to a video stored in one of the following supported formats: .m4v, .ogv, .mpeg, .mov, .3gp, .f4v, .rm, .ts, .wtv, .avi, .mp4, .wmv, .webm, .mts, .vob, .mxf, asf, m2ts <br/>
            <br/>
            <br/>
            <br/>
            #### Supported storage types:<br/>
            <br/>
            The URL can originate from various cloud storage services or content delivery networks (CDNs) such as: <br/>
            <br/>
            <br/>
            * **Amazon S3:** URLs from Amazon&apos;s Simple Storage Service. <br/>
            <br/>
            * **Google Cloud Storage:** URLs from Google Cloud&apos;s storage solution. <br/>
            <br/>
            * **Azure Blob Storage:** URLs from Microsoft&apos;s Azure storage. <br/>
            <br/>
            * **Public CDNs:** URLs from public content delivery networks that host video files. <br/>
            <br/>
            Upon successful creation, the API returns an `id` that should be retained for future operations related to this media. <br/>
            <br/>
            #### How it works<br/>
            <br/>
            <br/>
            1. Send a POST request to this endpoint with the media URL (typically a video or audio file) and optional media settings. <br/>
            <br/>
            2. FastPix uploads the video from the provided URL to its storage. <br/>
            <br/>
            3. Receive a response containing the unique id for the newly created media item. <br/>
            <br/>
            4. Use the id in subsequent API calls, such as checking the status of the media with the &lt;a href=&quot;https://docs.fastpix.io/reference/get-media&quot;&gt;Get Media by ID&lt;/a&gt; endpoint to determine when the media is ready for playback. <br/>
            <br/>
            FastPix uses webhooks to tell your application about things that happen in the background, outside of the API regular request flow. For instance, once the media file is created (but not yet processed or encoded), we&apos;ll shoot a `POST` message to the address you give us with the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediacreated&quot;&gt;video.media.created&lt;/a&gt;. <br/>
            <br/>
            <br/>
            Once processing is done you can look for the events &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#/videomediaready&quot;&gt;video.media.ready&lt;a/&gt; and &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediafailed&quot;&gt;video.media.failed&lt;/a&gt; to see the status of your new media file.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/upload-videos-from-url&quot;&gt;Upload videos from URL&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IVideos.GetAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get a media by ID
            
            <remarks>
            By calling this endpoint, you can retrieve detailed information about a specific media item, including its current `status` and a `playbackId`. This is particularly useful for retrieving specific media details when managing large content libraries. <br/>
            <br/>
            <br/>
            <br/>
            #### How it works <br/>
            <br/>
            <br/>
            <br/>
            1. Make a GET request to this endpoint, using the `&lt;mediaId&gt;` received after uploading the media file. <br/>
            <br/>
            <br/>
            2. Receive a response that includes details about the media: <br/>
            <br/>
            * `status` Indicates whether the media is still `preparing` or has transitioned to `ready`.  <br/>
            <br/>
            * The `playbackId` is a unique identifier that allows you to stream the media once it is `ready`. You can construct the stream URL in this format: `https://stream.fastpix.io/&lt;playbackId&gt;.m3u8`<br/>
            <br/>
            <br/>
            #### Example<br/>
            <br/>
            Suppose your platform provides users with an interface where they can manage their uploaded content. A user requests detailed information about a specific video to see if it has been fully processed and is available for playback. Using the media ID, you can fetch the information from FastPix and display it in the user&apos;s dashboard.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IVideos.UpdateAsync(System.String,Fastpix.Models.Requests.UpdatedMediaRequestBody,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Update a media by ID
            
            <remarks>
            This endpoint allows you to update specific parameters of an existing media file. You can modify the key-value pairs of the metadata that were provided in the payload during the creation of media from a URL or when uploading the media directly from device. <br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Make a PATCH request to this endpoint, replacing `&lt;mediaId&gt;` with the unique ID (`uploadId` or `id`) of the media received after uploading to FastPix. <br/>
            <br/>
            2. Include the updated parameters in the request body. <br/>
            <br/>
            3. Receive a response containing the updated media data, confirming the changes made. <br/>
            <br/>
            Once you have made the update request, you can also look for the webhook event &lt;a href=&quot;https://docs.fastpix.io/docs/media-events#videomediaupdated&quot;&gt;video.media.updated&lt;/a&gt; to notify your system about update status. <br/>
            <br/>
            #### Example<br/>
            Imagine a scenario where a user uploads a video and later realizes they need to change the title, add a new description or tags. You can use this endpoint to update the media metadata without having to re-upload the entire video.<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IVideos.UploadAsync(Fastpix.Models.Requests.DirectUploadVideoMediaRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Upload media from device
            
            <remarks>
            This endpoint enables accelerated uploads of large media files directly from your local device to FastPix for processing and storage.<br/>
            <br/>
            &gt; **PLEASE NOTE**<br/>
            &gt;<br/>
            &gt; This version now supports uploads with no file size limitations and offers faster uploads. The previous endpoint (which had a 500MB size limit) is now deprecated. You can find details in the <a href="https://docs.fastpix.io/changelog/api-update-direct-upload-media-from-device">changelog</a>.<br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Send a POST request to this endpoint with optional media settings.  <br/>
            <br/>
            2. The response includes an `uploadId` and a signed `url` for direct video file upload.<br/>
            <br/>
            3. Upload your video file to the provided `url` by making `PUT` request. The API accepts the media file from the device and uploads it to the FastPix platform. <br/>
            <br/>
            4. Once uploaded, the media undergoes processing and is assigned a unique ID for tracking. Retain this `uploadId` for any future operations related to this upload. <br/>
            <br/>
            <br/>
            <br/>
            <br/>
            After uploading, you can use the &lt;a href=&quot;https://docs.fastpix.io/reference/get-media&quot;&gt;Get Media by ID&lt;/a&gt; endpoint to check the status of the uploaded media asset and see if it has transitioned to a `ready` status for playback. <br/>
            <br/>
            To notify your application about the status of this API request check for the webhooks for &lt;a href=&quot;https://docs.fastpix.io/docs/webhooks-collection#media-related-events&quot;&gt;media related events&lt;/a&gt;.  <br/>
            <br/>
            <br/>
            #### Example<br/>
            <br/>
            A social media platform allows users to upload video content directly from their phones or computers. This endpoint facilitates the upload process. For example, if you are developing a video-sharing app where users can upload short clips from their mobile devices, this endpoint enables them to select a video, upload it to the platform.<br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/upload-videos-directly&quot;&gt;Upload videos directly&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IViews.ListAsync(Fastpix.Models.Requests.ListVideoViewsRequest,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List video views
            
            <remarks>
            Retrieves a list of video views that fall within the specified filters and have been completed within a defined timespan. It allows you to analyse viewer interactions with your video content effectively. <br/>
            <br/>
            <br/>
            #### How it works<br/>
            <br/>
              1. Make a `GET` request to this endpoint with the desired query parameters. <br/>
            <br/>
              2. Specify the timespan for which you want to retrieve the video views using the `timespan[]` parameter. <br/>
            <br/>
              3. Filter the views based on dimensions such as browser, device, video title, viewer ID, etc., using the `filterby[]` parameter. Get the dimensions by calling &lt;a href=&quot;https://docs.fastpix.io/reference/list_dimensions&quot;&gt;list the dimensions&lt;/a&gt; endpoint. <br/>
            <br/>
              4. Paginate the results using the `limit` and `offset` parameters. <br/>
            <br/>
              5. Optionally, filter by `viewerId`, `errorCode`, `orderBy` a specific field, and sort in ascending or descending order. <br/>
            <br/>
              6. Receive a response containing the list of video views matching the specified criteria.<br/>
            <br/>
            Each view in the response will include a unique `viewId`. You can use this `viewId` to call the &lt;a href=&quot;https://docs.fastpix.io/reference/get_video_view_details&quot;&gt;get details of video view&lt;/a&gt; endpoint to retrieve more detailed information about that specific view. <br/>
            <br/>
            <br/>
            #### Example<br/>
            <br/>
            Suppose you&apos;re managing a video streaming service and need to analyze how the content performs across different devices and browsers. By calling the List Video Views endpoint with filters like `browser_name` and `device_type`, you can get insights into which platforms are most popular with the audience. This data will help you optimize content for the most-used platforms and troubleshoot any playback issues on less common devices.<br/>
            <br/>
            <br/>
              Related guide: &lt;a href=&quot;https://docs.fastpix.io/docs/audience-metrics&quot;&gt;Audience metrics&lt;/a&gt;, &lt;a href=&quot;https://docs.fastpix.io/docs/understand-dashboard-ui#1-views-dashboard&quot;&gt;Views dashboard&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IViews.GetDetailsAsync(System.String,Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get details of video view
            
            <remarks>
            Allows you to retrieve detailed information about a specific video view using its unique `viewId`. This is useful for getting insights into individual viewer interactions with your video content. This detailed information is valuable for enhancing user experience and improving engagement with your video assets. <br/>
            <br/>
            Make a `GET` request to this endpoint and you will receive a response containing detailed information about the specified video view, including metrics and attributes related to that view. <br/>
            <br/>
            <br/>
            #### Example<br/>
            <br/>
            Suppose a developer receives a report of a poor viewing experience for a specific user. By using this endpoint with the user&apos;s `viewId`, the developer can retrieve metrics like buffering duration, playback errors, and session length. This data allows the developer to pinpoint issues (such as poor connectivity or a browser-specific problem) and take steps to improve the user experience.<br/>
            <br/>
            <br/>
            Related guide: &lt;a href=&quot;https://docs.fastpix.io/page/what-video-data-do-we-capture#/&quot;&gt;What Video Data do we capture?&lt;/a&gt;
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IViews.ListTopContentAsync(Fastpix.Models.Requests.ListByTopContentTimespan,System.String,System.Nullable{System.Int64},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            List by top content
            
            <remarks>
            Retrieves a list of the top video views that fall within the specified filters and have been completed within a defined timespan. It allows you to identify the most popular content based on viewer interactions. <br/>
            <br/>
            #### How it works<br/>
            <br/>
              1. Make a `GET` request to this endpoint with the desired query parameters. <br/>
            <br/>
              2. Specify the timespan for which you want to retrieve the top content using the `timespan[]` parameter. <br/>
            <br/>
              3. Filter the views based on dimensions such as browser, device, video title, etc., using the `filterby[]` parameter. <br/>
            <br/>
              4. `Limit` the results to control the number of top views returned. <br/>
            <br/>
              5. Receive a response containing the list of top video views matching the specified criteria.<br/>
            <br/>
            <br/>
              Related guide: &lt;a href=&quot;https://docs.fastpix.io/page/how-to-get-top-performing-content&quot;&gt;Get top-performing content&lt;/a&gt;<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IViews.GetTimeseriesAsync(Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get concurrent viewers timeseries
            
            <remarks>
            Retrieves a time series of the number of concurrent viewers, providing a real-time snapshot of audience activity over the last 30 minutes. This endpoint is essential for monitoring live events, gauging audience reaction to new content releases, or understanding immediate engagement trends.<br/>
            <br/>
            #### How it works<br/>
            <br/>
              1. Make a simple `GET` request to this endpoint. No query parameters are needed. <br/>
            <br/>
              2. The API automatically gathers data for the **last 30 minutes**, calculating the number of concurrent viewers at regular intervals within that window.<br/>
            <br/>
              3. Receive a response containing a `data` array, where each object represents a specific point in time.<br/>
            <br/>
              4. Each object in the array includes the `intervalTime` (the timestamp of the measurement) and `numberOfViews` (the count of concurrent viewers at that instant), allowing you to easily plot viewer activity over time.<br/>
            <br/>
            #### Example<br/>
            <br/>
            Imagine you are streaming a major live event, such as a product launch, a sports game, or a webinar. You need to monitor audience engagement in real-time to see if viewership is increasing, decreasing, or holding steady.<br/>
            <br/>
            By calling this endpoint periodically (e.g., every minute), you can plot a live graph of your viewership. This allows you to identify peak moments of interest, see the immediate impact of social media promotions, or detect potential technical issues if there&apos;s a sudden, unexpected drop in viewers<br/>
            
            </remarks>
            </summary>
        </member>
        <member name="M:Fastpix.IViews.GetConcurrentViewersBreakdownAsync(System.Nullable{Fastpix.Models.Requests.GetDataViewlistCurrentViewsFilterDimension},System.Nullable{System.Int64},Fastpix.Utils.Retries.RetryConfig,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Get concurrent viewers breakdown by dimension
            
            <remarks>
            Retrieves a real-time breakdown of present concurrent viewers, grouped by a chosen dimension. This endpoint allows you to see how your audience is distributed across different categories like geography, content, or technology, based on activity in the last 30 minutes. <br/>
            <br/>
            For example, you can see how many viewers are currently watching from the US vs. India, or which video titles are most popular right now.<br/>
            <br/>
            #### How it works<br/>
            <br/>
            1. Make a `GET` request to this endpoint.<br/>
            <br/>
            2. Specify the `dimension` you want to group by in the query parameters (e.g., `dimension=country` or `dimension=video_title`). This is the most important parameter as it defines how the data is categorized.<br/>
            <br/>
            3. Optionally, use the `limit` parameter to control the number of results returned (e.g., `limit=5` to get the top 5 countries).<br/>
            <br/>
            4. The API analyzes viewer data from the last 30 minutes and aggregates the viewer counts for each unique value within the chosen dimension.<br/>
            <br/>
            5. Receive a response containing a `data` array, where each object represents a specific group (e.g., a country or a video title) and its corresponding number of `concurrent_viewers`.<br/>
            <br/>
            #### Example<br/>
            <br/>
            Imagine you are running a global streaming platform and have just launched a new original series. You want to see, in real-time, which regions are engaging most with the new content versus your older library content.<br/>
            <br/>
            By calling this endpoint with `dimension=video_title`, you can immediately see a list of your most-watched videos right now and their respective viewer counts. Then, by calling it again with `dimension=country`, you can get a live breakdown of your audience&apos;s geographic distribution. This helps you confirm if your marketing efforts in specific countries are paying off instantly and allows you to make data-driven decisions during live events.<br/>
            
            </remarks>
            </summary>
        </member>
    </members>
</doc>
